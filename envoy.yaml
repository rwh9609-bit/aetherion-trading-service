static_resources:
  listeners:
  - name: listener_https
    address:
      socket_address: { address: 0.0.0.0, port_value: 443 }
    filter_chains:
    - filter_chain_match: {}
      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
          clusters:
            - name: trading_service
              connect_timeout: 0.5s
              type: STRICT_DNS
              lb_policy: ROUND_ROBIN
              http2_protocol_options: {}
              load_assignment:
                cluster_name: trading_service
                endpoints:
                  - lb_endpoints:
                      - endpoint:
                          address:
                            socket_address:
                              address: trading
                              port_value: 50051
              health_checks:
                - timeout: 1s
                  interval: 10s
                  unhealthy_threshold: 2
                  healthy_threshold: 2
                  grpc_health_check:
                    service_name: ""
            - name: risk_service
              connect_timeout: 0.5s
              type: STRICT_DNS
              lb_policy: ROUND_ROBIN
              http2_protocol_options: {}
              load_assignment:
                cluster_name: risk_service
                endpoints:
                  - lb_endpoints:
                      - endpoint:
                          address:
                            socket_address:
                              address: risk
                              port_value: 50052
              health_checks:
                - timeout: 1s
                  interval: 10s
                  unhealthy_threshold: 2
                  healthy_threshold: 2
                  grpc_health_check:
                    service_name: ""
            - name: frontend
              connect_timeout: 0.5s
              type: STRICT_DNS
              lb_policy: ROUND_ROBIN
              load_assignment:
                cluster_name: frontend
                endpoints:
                  - lb_endpoints:
                      - endpoint:
                          address:
                            socket_address:
                              address: frontend
                              port_value: 80
                allow_credentials: false
              response_headers_to_add:
              - header: { key: Strict-Transport-Security, value: "max-age=63072000; includeSubDomains; preload" }
                append_action: OVERWRITE_IF_EXISTS_OR_ADD
              - header: { key: X-Content-Type-Options, value: "nosniff" }
                append_action: OVERWRITE_IF_EXISTS_OR_ADD
              - header: { key: X-Frame-Options, value: "DENY" }
                append_action: OVERWRITE_IF_EXISTS_OR_ADD
              - header: { key: Referrer-Policy, value: "strict-origin-when-cross-origin" }
                append_action: OVERWRITE_IF_EXISTS_OR_ADD
              - header: { key: Content-Security-Policy, value: "default-src 'self'; connect-src 'self' https://api.aetherion.cloud http://localhost:8080; script-src 'self'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; frame-ancestors 'none';" }
                append_action: OVERWRITE_IF_EXISTS_OR_ADD
              routes:
              - match: { prefix: "/trading.TradingService/" }
                route:
                  cluster: trading_service
                  timeout: 0s
                  max_stream_duration: { grpc_timeout_header_max: 0s }
              - match: { prefix: "/trading.RiskService/" }
                route:
                  cluster: risk_service
                  timeout: 0s
                  max_stream_duration: { grpc_timeout_header_max: 0s }
              - match: { prefix: "/trading.AuthService/" }
                route:
                  cluster: trading_service
                  timeout: 0s
                  max_stream_duration: { grpc_timeout_header_max: 0s }
              - match: { prefix: "/trading.BotService/" }
                route:
                  cluster: trading_service
                  timeout: 0s
                  max_stream_duration: { grpc_timeout_header_max: 0s }
              - match: { prefix: "/healthz" }
                direct_response:
                  status: 200
                  body: { inline_string: "ok" }
              - match: { prefix: "/" }
                route:
                  cluster: frontend
                  timeout: 0s
                  max_stream_duration: { grpc_timeout_header_max: 0s }
            - name: root_domain_passthrough
              domains: ["aetherion.cloud"]
              routes:
              - match: { prefix: "/trading." }
                route:
                  cluster: trading_service
                  timeout: 0s
                  max_stream_duration: { grpc_timeout_header_max: 0s }
              - match: { prefix: "/healthz" }
                direct_response:
                  status: 200
                  body: { inline_string: "ok" }
              - match: { prefix: "/" }
                route:
                  cluster: frontend
                  timeout: 0s
                  max_stream_duration: { grpc_timeout_header_max: 0s }
  - name: frontend
    connect_timeout: 0.5s
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: frontend
      endpoints:
      - lb_endpoints:
  - endpoint: { address: { socket_address: { address: frontend, port_value: 80 } } }
          http_filters:
          - name: envoy.filters.http.cors
            typed_config: { "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.Cors }
          - name: envoy.filters.http.grpc_web
            typed_config: { "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_web.v3.GrpcWeb }
          - name: envoy.filters.http.compressor
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.compressor.v3.Compressor
              response_direction_config:
                common_config: { enabled: { default_value: true, runtime_key: compressor.enabled } }
              compressor_library: { name: text_optimized, typed_config: { "@type": type.googleapis.com/envoy.extensions.compression.gzip.compressor.v3.Gzip } }
          - name: envoy.filters.http.router
            typed_config: { "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router }
  clusters:
  - name: trading_service
    connect_timeout: 0.5s
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    http2_protocol_options: {}
    load_assignment:
      cluster_name: trading_service
      endpoints:
      - lb_endpoints:
        - endpoint: { address: { socket_address: { address: trading, port_value: 50051 } } }
    health_checks:
    - timeout: 1s
      interval: 10s
      unhealthy_threshold: 2
      healthy_threshold: 2
      grpc_health_check: { service_name: "" }
  - name: risk_service
    connect_timeout: 0.5s
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    http2_protocol_options: {}
    load_assignment:
      cluster_name: risk_service
      endpoints:
      - lb_endpoints:
        - endpoint: { address: { socket_address: { address: risk, port_value: 50052 } } }
    health_checks:
    - timeout: 1s
      interval: 10s
      unhealthy_threshold: 2
      healthy_threshold: 2
      grpc_health_check: { service_name: "" }

admin:
  access_log_path: /tmp/admin_access.log
  address:
    socket_address: { address: 0.0.0.0, port_value: 9901 }
