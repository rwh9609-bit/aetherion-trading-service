/**
 * @fileoverview gRPC-Web generated client stub for aetherion
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v5.29.3
// source: trading_api.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');


var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js')
const proto = {};
proto.aetherion = require('./trading_api_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.aetherion.AuthServiceClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.aetherion.AuthServicePromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.aetherion.RegisterRequest,
 *   !proto.aetherion.AuthResponse>}
 */
const methodDescriptor_AuthService_Register = new grpc.web.MethodDescriptor(
  '/aetherion.AuthService/Register',
  grpc.web.MethodType.UNARY,
  proto.aetherion.RegisterRequest,
  proto.aetherion.AuthResponse,
  /**
   * @param {!proto.aetherion.RegisterRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.aetherion.AuthResponse.deserializeBinary
);


/**
 * @param {!proto.aetherion.RegisterRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.aetherion.AuthResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.aetherion.AuthResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.aetherion.AuthServiceClient.prototype.register =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/aetherion.AuthService/Register',
      request,
      metadata || {},
      methodDescriptor_AuthService_Register,
      callback);
};


/**
 * @param {!proto.aetherion.RegisterRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.aetherion.AuthResponse>}
 *     Promise that resolves to the response
 */
proto.aetherion.AuthServicePromiseClient.prototype.register =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/aetherion.AuthService/Register',
      request,
      metadata || {},
      methodDescriptor_AuthService_Register);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.aetherion.AuthRequest,
 *   !proto.aetherion.AuthResponse>}
 */
const methodDescriptor_AuthService_Login = new grpc.web.MethodDescriptor(
  '/aetherion.AuthService/Login',
  grpc.web.MethodType.UNARY,
  proto.aetherion.AuthRequest,
  proto.aetherion.AuthResponse,
  /**
   * @param {!proto.aetherion.AuthRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.aetherion.AuthResponse.deserializeBinary
);


/**
 * @param {!proto.aetherion.AuthRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.aetherion.AuthResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.aetherion.AuthResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.aetherion.AuthServiceClient.prototype.login =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/aetherion.AuthService/Login',
      request,
      metadata || {},
      methodDescriptor_AuthService_Login,
      callback);
};


/**
 * @param {!proto.aetherion.AuthRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.aetherion.AuthResponse>}
 *     Promise that resolves to the response
 */
proto.aetherion.AuthServicePromiseClient.prototype.login =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/aetherion.AuthService/Login',
      request,
      metadata || {},
      methodDescriptor_AuthService_Login);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.aetherion.GetUserRequest,
 *   !proto.aetherion.UserInfo>}
 */
const methodDescriptor_AuthService_GetUser = new grpc.web.MethodDescriptor(
  '/aetherion.AuthService/GetUser',
  grpc.web.MethodType.UNARY,
  proto.aetherion.GetUserRequest,
  proto.aetherion.UserInfo,
  /**
   * @param {!proto.aetherion.GetUserRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.aetherion.UserInfo.deserializeBinary
);


/**
 * @param {!proto.aetherion.GetUserRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.aetherion.UserInfo)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.aetherion.UserInfo>|undefined}
 *     The XHR Node Readable Stream
 */
proto.aetherion.AuthServiceClient.prototype.getUser =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/aetherion.AuthService/GetUser',
      request,
      metadata || {},
      methodDescriptor_AuthService_GetUser,
      callback);
};


/**
 * @param {!proto.aetherion.GetUserRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.aetherion.UserInfo>}
 *     Promise that resolves to the response
 */
proto.aetherion.AuthServicePromiseClient.prototype.getUser =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/aetherion.AuthService/GetUser',
      request,
      metadata || {},
      methodDescriptor_AuthService_GetUser);
};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.aetherion.BotServiceClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.aetherion.BotServicePromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.aetherion.CreateBotRequest,
 *   !proto.aetherion.StatusResponse>}
 */
const methodDescriptor_BotService_CreateBot = new grpc.web.MethodDescriptor(
  '/aetherion.BotService/CreateBot',
  grpc.web.MethodType.UNARY,
  proto.aetherion.CreateBotRequest,
  proto.aetherion.StatusResponse,
  /**
   * @param {!proto.aetherion.CreateBotRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.aetherion.StatusResponse.deserializeBinary
);


/**
 * @param {!proto.aetherion.CreateBotRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.aetherion.StatusResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.aetherion.StatusResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.aetherion.BotServiceClient.prototype.createBot =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/aetherion.BotService/CreateBot',
      request,
      metadata || {},
      methodDescriptor_BotService_CreateBot,
      callback);
};


/**
 * @param {!proto.aetherion.CreateBotRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.aetherion.StatusResponse>}
 *     Promise that resolves to the response
 */
proto.aetherion.BotServicePromiseClient.prototype.createBot =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/aetherion.BotService/CreateBot',
      request,
      metadata || {},
      methodDescriptor_BotService_CreateBot);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.aetherion.BotIdRequest,
 *   !proto.aetherion.Bot>}
 */
const methodDescriptor_BotService_GetBot = new grpc.web.MethodDescriptor(
  '/aetherion.BotService/GetBot',
  grpc.web.MethodType.UNARY,
  proto.aetherion.BotIdRequest,
  proto.aetherion.Bot,
  /**
   * @param {!proto.aetherion.BotIdRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.aetherion.Bot.deserializeBinary
);


/**
 * @param {!proto.aetherion.BotIdRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.aetherion.Bot)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.aetherion.Bot>|undefined}
 *     The XHR Node Readable Stream
 */
proto.aetherion.BotServiceClient.prototype.getBot =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/aetherion.BotService/GetBot',
      request,
      metadata || {},
      methodDescriptor_BotService_GetBot,
      callback);
};


/**
 * @param {!proto.aetherion.BotIdRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.aetherion.Bot>}
 *     Promise that resolves to the response
 */
proto.aetherion.BotServicePromiseClient.prototype.getBot =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/aetherion.BotService/GetBot',
      request,
      metadata || {},
      methodDescriptor_BotService_GetBot);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.aetherion.ListBotsRequest,
 *   !proto.aetherion.BotList>}
 */
const methodDescriptor_BotService_ListBots = new grpc.web.MethodDescriptor(
  '/aetherion.BotService/ListBots',
  grpc.web.MethodType.UNARY,
  proto.aetherion.ListBotsRequest,
  proto.aetherion.BotList,
  /**
   * @param {!proto.aetherion.ListBotsRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.aetherion.BotList.deserializeBinary
);


/**
 * @param {!proto.aetherion.ListBotsRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.aetherion.BotList)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.aetherion.BotList>|undefined}
 *     The XHR Node Readable Stream
 */
proto.aetherion.BotServiceClient.prototype.listBots =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/aetherion.BotService/ListBots',
      request,
      metadata || {},
      methodDescriptor_BotService_ListBots,
      callback);
};


/**
 * @param {!proto.aetherion.ListBotsRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.aetherion.BotList>}
 *     Promise that resolves to the response
 */
proto.aetherion.BotServicePromiseClient.prototype.listBots =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/aetherion.BotService/ListBots',
      request,
      metadata || {},
      methodDescriptor_BotService_ListBots);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.aetherion.UpdateBotRequest,
 *   !proto.aetherion.Bot>}
 */
const methodDescriptor_BotService_UpdateBot = new grpc.web.MethodDescriptor(
  '/aetherion.BotService/UpdateBot',
  grpc.web.MethodType.UNARY,
  proto.aetherion.UpdateBotRequest,
  proto.aetherion.Bot,
  /**
   * @param {!proto.aetherion.UpdateBotRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.aetherion.Bot.deserializeBinary
);


/**
 * @param {!proto.aetherion.UpdateBotRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.aetherion.Bot)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.aetherion.Bot>|undefined}
 *     The XHR Node Readable Stream
 */
proto.aetherion.BotServiceClient.prototype.updateBot =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/aetherion.BotService/UpdateBot',
      request,
      metadata || {},
      methodDescriptor_BotService_UpdateBot,
      callback);
};


/**
 * @param {!proto.aetherion.UpdateBotRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.aetherion.Bot>}
 *     Promise that resolves to the response
 */
proto.aetherion.BotServicePromiseClient.prototype.updateBot =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/aetherion.BotService/UpdateBot',
      request,
      metadata || {},
      methodDescriptor_BotService_UpdateBot);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.aetherion.BotIdRequest,
 *   !proto.aetherion.StatusResponse>}
 */
const methodDescriptor_BotService_DeleteBot = new grpc.web.MethodDescriptor(
  '/aetherion.BotService/DeleteBot',
  grpc.web.MethodType.UNARY,
  proto.aetherion.BotIdRequest,
  proto.aetherion.StatusResponse,
  /**
   * @param {!proto.aetherion.BotIdRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.aetherion.StatusResponse.deserializeBinary
);


/**
 * @param {!proto.aetherion.BotIdRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.aetherion.StatusResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.aetherion.StatusResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.aetherion.BotServiceClient.prototype.deleteBot =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/aetherion.BotService/DeleteBot',
      request,
      metadata || {},
      methodDescriptor_BotService_DeleteBot,
      callback);
};


/**
 * @param {!proto.aetherion.BotIdRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.aetherion.StatusResponse>}
 *     Promise that resolves to the response
 */
proto.aetherion.BotServicePromiseClient.prototype.deleteBot =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/aetherion.BotService/DeleteBot',
      request,
      metadata || {},
      methodDescriptor_BotService_DeleteBot);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.aetherion.BotIdRequest,
 *   !proto.aetherion.StatusResponse>}
 */
const methodDescriptor_BotService_StartBot = new grpc.web.MethodDescriptor(
  '/aetherion.BotService/StartBot',
  grpc.web.MethodType.UNARY,
  proto.aetherion.BotIdRequest,
  proto.aetherion.StatusResponse,
  /**
   * @param {!proto.aetherion.BotIdRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.aetherion.StatusResponse.deserializeBinary
);


/**
 * @param {!proto.aetherion.BotIdRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.aetherion.StatusResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.aetherion.StatusResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.aetherion.BotServiceClient.prototype.startBot =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/aetherion.BotService/StartBot',
      request,
      metadata || {},
      methodDescriptor_BotService_StartBot,
      callback);
};


/**
 * @param {!proto.aetherion.BotIdRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.aetherion.StatusResponse>}
 *     Promise that resolves to the response
 */
proto.aetherion.BotServicePromiseClient.prototype.startBot =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/aetherion.BotService/StartBot',
      request,
      metadata || {},
      methodDescriptor_BotService_StartBot);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.aetherion.BotIdRequest,
 *   !proto.aetherion.StatusResponse>}
 */
const methodDescriptor_BotService_StopBot = new grpc.web.MethodDescriptor(
  '/aetherion.BotService/StopBot',
  grpc.web.MethodType.UNARY,
  proto.aetherion.BotIdRequest,
  proto.aetherion.StatusResponse,
  /**
   * @param {!proto.aetherion.BotIdRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.aetherion.StatusResponse.deserializeBinary
);


/**
 * @param {!proto.aetherion.BotIdRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.aetherion.StatusResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.aetherion.StatusResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.aetherion.BotServiceClient.prototype.stopBot =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/aetherion.BotService/StopBot',
      request,
      metadata || {},
      methodDescriptor_BotService_StopBot,
      callback);
};


/**
 * @param {!proto.aetherion.BotIdRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.aetherion.StatusResponse>}
 *     Promise that resolves to the response
 */
proto.aetherion.BotServicePromiseClient.prototype.stopBot =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/aetherion.BotService/StopBot',
      request,
      metadata || {},
      methodDescriptor_BotService_StopBot);
};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.aetherion.OrderServiceClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.aetherion.OrderServicePromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.aetherion.CreateOrderRequest,
 *   !proto.aetherion.Order>}
 */
const methodDescriptor_OrderService_CreateOrder = new grpc.web.MethodDescriptor(
  '/aetherion.OrderService/CreateOrder',
  grpc.web.MethodType.UNARY,
  proto.aetherion.CreateOrderRequest,
  proto.aetherion.Order,
  /**
   * @param {!proto.aetherion.CreateOrderRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.aetherion.Order.deserializeBinary
);


/**
 * @param {!proto.aetherion.CreateOrderRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.aetherion.Order)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.aetherion.Order>|undefined}
 *     The XHR Node Readable Stream
 */
proto.aetherion.OrderServiceClient.prototype.createOrder =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/aetherion.OrderService/CreateOrder',
      request,
      metadata || {},
      methodDescriptor_OrderService_CreateOrder,
      callback);
};


/**
 * @param {!proto.aetherion.CreateOrderRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.aetherion.Order>}
 *     Promise that resolves to the response
 */
proto.aetherion.OrderServicePromiseClient.prototype.createOrder =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/aetherion.OrderService/CreateOrder',
      request,
      metadata || {},
      methodDescriptor_OrderService_CreateOrder);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.aetherion.CancelOrderRequest,
 *   !proto.aetherion.Order>}
 */
const methodDescriptor_OrderService_CancelOrder = new grpc.web.MethodDescriptor(
  '/aetherion.OrderService/CancelOrder',
  grpc.web.MethodType.UNARY,
  proto.aetherion.CancelOrderRequest,
  proto.aetherion.Order,
  /**
   * @param {!proto.aetherion.CancelOrderRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.aetherion.Order.deserializeBinary
);


/**
 * @param {!proto.aetherion.CancelOrderRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.aetherion.Order)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.aetherion.Order>|undefined}
 *     The XHR Node Readable Stream
 */
proto.aetherion.OrderServiceClient.prototype.cancelOrder =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/aetherion.OrderService/CancelOrder',
      request,
      metadata || {},
      methodDescriptor_OrderService_CancelOrder,
      callback);
};


/**
 * @param {!proto.aetherion.CancelOrderRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.aetherion.Order>}
 *     Promise that resolves to the response
 */
proto.aetherion.OrderServicePromiseClient.prototype.cancelOrder =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/aetherion.OrderService/CancelOrder',
      request,
      metadata || {},
      methodDescriptor_OrderService_CancelOrder);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.aetherion.GetOrderRequest,
 *   !proto.aetherion.Order>}
 */
const methodDescriptor_OrderService_GetOrder = new grpc.web.MethodDescriptor(
  '/aetherion.OrderService/GetOrder',
  grpc.web.MethodType.UNARY,
  proto.aetherion.GetOrderRequest,
  proto.aetherion.Order,
  /**
   * @param {!proto.aetherion.GetOrderRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.aetherion.Order.deserializeBinary
);


/**
 * @param {!proto.aetherion.GetOrderRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.aetherion.Order)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.aetherion.Order>|undefined}
 *     The XHR Node Readable Stream
 */
proto.aetherion.OrderServiceClient.prototype.getOrder =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/aetherion.OrderService/GetOrder',
      request,
      metadata || {},
      methodDescriptor_OrderService_GetOrder,
      callback);
};


/**
 * @param {!proto.aetherion.GetOrderRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.aetherion.Order>}
 *     Promise that resolves to the response
 */
proto.aetherion.OrderServicePromiseClient.prototype.getOrder =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/aetherion.OrderService/GetOrder',
      request,
      metadata || {},
      methodDescriptor_OrderService_GetOrder);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.aetherion.TradeHistoryRequest,
 *   !proto.aetherion.TradeHistoryResponse>}
 */
const methodDescriptor_OrderService_GetTradeHistory = new grpc.web.MethodDescriptor(
  '/aetherion.OrderService/GetTradeHistory',
  grpc.web.MethodType.UNARY,
  proto.aetherion.TradeHistoryRequest,
  proto.aetherion.TradeHistoryResponse,
  /**
   * @param {!proto.aetherion.TradeHistoryRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.aetherion.TradeHistoryResponse.deserializeBinary
);


/**
 * @param {!proto.aetherion.TradeHistoryRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.aetherion.TradeHistoryResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.aetherion.TradeHistoryResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.aetherion.OrderServiceClient.prototype.getTradeHistory =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/aetherion.OrderService/GetTradeHistory',
      request,
      metadata || {},
      methodDescriptor_OrderService_GetTradeHistory,
      callback);
};


/**
 * @param {!proto.aetherion.TradeHistoryRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.aetherion.TradeHistoryResponse>}
 *     Promise that resolves to the response
 */
proto.aetherion.OrderServicePromiseClient.prototype.getTradeHistory =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/aetherion.OrderService/GetTradeHistory',
      request,
      metadata || {},
      methodDescriptor_OrderService_GetTradeHistory);
};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.aetherion.PortfolioServiceClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.aetherion.PortfolioServicePromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.aetherion.PortfolioRequest,
 *   !proto.aetherion.PortfolioResponse>}
 */
const methodDescriptor_PortfolioService_GetPortfolio = new grpc.web.MethodDescriptor(
  '/aetherion.PortfolioService/GetPortfolio',
  grpc.web.MethodType.UNARY,
  proto.aetherion.PortfolioRequest,
  proto.aetherion.PortfolioResponse,
  /**
   * @param {!proto.aetherion.PortfolioRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.aetherion.PortfolioResponse.deserializeBinary
);


/**
 * @param {!proto.aetherion.PortfolioRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.aetherion.PortfolioResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.aetherion.PortfolioResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.aetherion.PortfolioServiceClient.prototype.getPortfolio =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/aetherion.PortfolioService/GetPortfolio',
      request,
      metadata || {},
      methodDescriptor_PortfolioService_GetPortfolio,
      callback);
};


/**
 * @param {!proto.aetherion.PortfolioRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.aetherion.PortfolioResponse>}
 *     Promise that resolves to the response
 */
proto.aetherion.PortfolioServicePromiseClient.prototype.getPortfolio =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/aetherion.PortfolioService/GetPortfolio',
      request,
      metadata || {},
      methodDescriptor_PortfolioService_GetPortfolio);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.aetherion.PerformanceHistoryRequest,
 *   !proto.aetherion.PerformanceHistoryResponse>}
 */
const methodDescriptor_PortfolioService_GetPerformanceHistory = new grpc.web.MethodDescriptor(
  '/aetherion.PortfolioService/GetPerformanceHistory',
  grpc.web.MethodType.UNARY,
  proto.aetherion.PerformanceHistoryRequest,
  proto.aetherion.PerformanceHistoryResponse,
  /**
   * @param {!proto.aetherion.PerformanceHistoryRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.aetherion.PerformanceHistoryResponse.deserializeBinary
);


/**
 * @param {!proto.aetherion.PerformanceHistoryRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.aetherion.PerformanceHistoryResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.aetherion.PerformanceHistoryResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.aetherion.PortfolioServiceClient.prototype.getPerformanceHistory =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/aetherion.PortfolioService/GetPerformanceHistory',
      request,
      metadata || {},
      methodDescriptor_PortfolioService_GetPerformanceHistory,
      callback);
};


/**
 * @param {!proto.aetherion.PerformanceHistoryRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.aetherion.PerformanceHistoryResponse>}
 *     Promise that resolves to the response
 */
proto.aetherion.PortfolioServicePromiseClient.prototype.getPerformanceHistory =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/aetherion.PortfolioService/GetPerformanceHistory',
      request,
      metadata || {},
      methodDescriptor_PortfolioService_GetPerformanceHistory);
};


module.exports = proto.aetherion;

