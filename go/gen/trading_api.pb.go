// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v5.29.3
// source: trading_api.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OrderSide int32

const (
	OrderSide_ORDER_SIDE_UNSPECIFIED OrderSide = 0
	OrderSide_BUY                    OrderSide = 1
	OrderSide_SELL                   OrderSide = 2
)

// Enum value maps for OrderSide.
var (
	OrderSide_name = map[int32]string{
		0: "ORDER_SIDE_UNSPECIFIED",
		1: "BUY",
		2: "SELL",
	}
	OrderSide_value = map[string]int32{
		"ORDER_SIDE_UNSPECIFIED": 0,
		"BUY":                    1,
		"SELL":                   2,
	}
)

func (x OrderSide) Enum() *OrderSide {
	p := new(OrderSide)
	*p = x
	return p
}

func (x OrderSide) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderSide) Descriptor() protoreflect.EnumDescriptor {
	return file_trading_api_proto_enumTypes[0].Descriptor()
}

func (OrderSide) Type() protoreflect.EnumType {
	return &file_trading_api_proto_enumTypes[0]
}

func (x OrderSide) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderSide.Descriptor instead.
func (OrderSide) EnumDescriptor() ([]byte, []int) {
	return file_trading_api_proto_rawDescGZIP(), []int{0}
}

type OrderType int32

const (
	OrderType_ORDER_TYPE_UNSPECIFIED OrderType = 0
	OrderType_MARKET                 OrderType = 1
	OrderType_LIMIT                  OrderType = 2
	OrderType_STOP                   OrderType = 3
)

// Enum value maps for OrderType.
var (
	OrderType_name = map[int32]string{
		0: "ORDER_TYPE_UNSPECIFIED",
		1: "MARKET",
		2: "LIMIT",
		3: "STOP",
	}
	OrderType_value = map[string]int32{
		"ORDER_TYPE_UNSPECIFIED": 0,
		"MARKET":                 1,
		"LIMIT":                  2,
		"STOP":                   3,
	}
)

func (x OrderType) Enum() *OrderType {
	p := new(OrderType)
	*p = x
	return p
}

func (x OrderType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderType) Descriptor() protoreflect.EnumDescriptor {
	return file_trading_api_proto_enumTypes[1].Descriptor()
}

func (OrderType) Type() protoreflect.EnumType {
	return &file_trading_api_proto_enumTypes[1]
}

func (x OrderType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderType.Descriptor instead.
func (OrderType) EnumDescriptor() ([]byte, []int) {
	return file_trading_api_proto_rawDescGZIP(), []int{1}
}

type OrderStatus int32

const (
	OrderStatus_ORDER_STATUS_UNSPECIFIED OrderStatus = 0
	OrderStatus_NEW                      OrderStatus = 1
	OrderStatus_SUBMITTED                OrderStatus = 2
	OrderStatus_PARTIALLY_FILLED         OrderStatus = 3
	OrderStatus_FILLED                   OrderStatus = 4
	OrderStatus_CANCELED                 OrderStatus = 5
	OrderStatus_REJECTED                 OrderStatus = 6
)

// Enum value maps for OrderStatus.
var (
	OrderStatus_name = map[int32]string{
		0: "ORDER_STATUS_UNSPECIFIED",
		1: "NEW",
		2: "SUBMITTED",
		3: "PARTIALLY_FILLED",
		4: "FILLED",
		5: "CANCELED",
		6: "REJECTED",
	}
	OrderStatus_value = map[string]int32{
		"ORDER_STATUS_UNSPECIFIED": 0,
		"NEW":                      1,
		"SUBMITTED":                2,
		"PARTIALLY_FILLED":         3,
		"FILLED":                   4,
		"CANCELED":                 5,
		"REJECTED":                 6,
	}
)

func (x OrderStatus) Enum() *OrderStatus {
	p := new(OrderStatus)
	*p = x
	return p
}

func (x OrderStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_trading_api_proto_enumTypes[2].Descriptor()
}

func (OrderStatus) Type() protoreflect.EnumType {
	return &file_trading_api_proto_enumTypes[2]
}

func (x OrderStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderStatus.Descriptor instead.
func (OrderStatus) EnumDescriptor() ([]byte, []int) {
	return file_trading_api_proto_rawDescGZIP(), []int{2}
}

type Empty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_trading_api_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_trading_api_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_trading_api_proto_rawDescGZIP(), []int{0}
}

// High-precision financial values (avoids float rounding issues)
type DecimalValue struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Units         int64                  `protobuf:"varint,1,opt,name=units,proto3" json:"units,omitempty"`  // Whole part
	Nanos         int32                  `protobuf:"fixed32,2,opt,name=nanos,proto3" json:"nanos,omitempty"` // Fractional part, -999,999,999 .. +999,999,999
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DecimalValue) Reset() {
	*x = DecimalValue{}
	mi := &file_trading_api_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecimalValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecimalValue) ProtoMessage() {}

func (x *DecimalValue) ProtoReflect() protoreflect.Message {
	mi := &file_trading_api_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecimalValue.ProtoReflect.Descriptor instead.
func (*DecimalValue) Descriptor() ([]byte, []int) {
	return file_trading_api_proto_rawDescGZIP(), []int{1}
}

func (x *DecimalValue) GetUnits() int64 {
	if x != nil {
		return x.Units
	}
	return 0
}

func (x *DecimalValue) GetNanos() int32 {
	if x != nil {
		return x.Nanos
	}
	return 0
}

type StatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Id            string                 `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"` // optional identifier (e.g., strategy/bot id)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusResponse) Reset() {
	*x = StatusResponse{}
	mi := &file_trading_api_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResponse) ProtoMessage() {}

func (x *StatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trading_api_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResponse.ProtoReflect.Descriptor instead.
func (*StatusResponse) Descriptor() ([]byte, []int) {
	return file_trading_api_proto_rawDescGZIP(), []int{2}
}

func (x *StatusResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *StatusResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *StatusResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Pagination struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Limit         int32                  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Pagination) Reset() {
	*x = Pagination{}
	mi := &file_trading_api_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Pagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pagination) ProtoMessage() {}

func (x *Pagination) ProtoReflect() protoreflect.Message {
	mi := &file_trading_api_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pagination.ProtoReflect.Descriptor instead.
func (*Pagination) Descriptor() ([]byte, []int) {
	return file_trading_api_proto_rawDescGZIP(), []int{3}
}

func (x *Pagination) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *Pagination) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type PortfolioRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BotId         string                 `protobuf:"bytes,1,opt,name=bot_id,json=botId,proto3" json:"bot_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PortfolioRequest) Reset() {
	*x = PortfolioRequest{}
	mi := &file_trading_api_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PortfolioRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortfolioRequest) ProtoMessage() {}

func (x *PortfolioRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trading_api_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortfolioRequest.ProtoReflect.Descriptor instead.
func (*PortfolioRequest) Descriptor() ([]byte, []int) {
	return file_trading_api_proto_rawDescGZIP(), []int{4}
}

func (x *PortfolioRequest) GetBotId() string {
	if x != nil {
		return x.BotId
	}
	return ""
}

type PortfolioPosition struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Symbol        string                 `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Quantity      *DecimalValue          `protobuf:"bytes,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	AveragePrice  *DecimalValue          `protobuf:"bytes,3,opt,name=average_price,json=averagePrice,proto3" json:"average_price,omitempty"`
	MarketValue   *DecimalValue          `protobuf:"bytes,4,opt,name=market_value,json=marketValue,proto3" json:"market_value,omitempty"`
	UnrealizedPnl *DecimalValue          `protobuf:"bytes,5,opt,name=unrealized_pnl,json=unrealizedPnl,proto3" json:"unrealized_pnl,omitempty"`
	ExposurePct   *DecimalValue          `protobuf:"bytes,6,opt,name=exposure_pct,json=exposurePct,proto3" json:"exposure_pct,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PortfolioPosition) Reset() {
	*x = PortfolioPosition{}
	mi := &file_trading_api_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PortfolioPosition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortfolioPosition) ProtoMessage() {}

func (x *PortfolioPosition) ProtoReflect() protoreflect.Message {
	mi := &file_trading_api_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortfolioPosition.ProtoReflect.Descriptor instead.
func (*PortfolioPosition) Descriptor() ([]byte, []int) {
	return file_trading_api_proto_rawDescGZIP(), []int{5}
}

func (x *PortfolioPosition) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *PortfolioPosition) GetQuantity() *DecimalValue {
	if x != nil {
		return x.Quantity
	}
	return nil
}

func (x *PortfolioPosition) GetAveragePrice() *DecimalValue {
	if x != nil {
		return x.AveragePrice
	}
	return nil
}

func (x *PortfolioPosition) GetMarketValue() *DecimalValue {
	if x != nil {
		return x.MarketValue
	}
	return nil
}

func (x *PortfolioPosition) GetUnrealizedPnl() *DecimalValue {
	if x != nil {
		return x.UnrealizedPnl
	}
	return nil
}

func (x *PortfolioPosition) GetExposurePct() *DecimalValue {
	if x != nil {
		return x.ExposurePct
	}
	return nil
}

type PortfolioResponse struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	BotId               string                 `protobuf:"bytes,1,opt,name=bot_id,json=botId,proto3" json:"bot_id,omitempty"`
	Positions           []*PortfolioPosition   `protobuf:"bytes,2,rep,name=positions,proto3" json:"positions,omitempty"`
	TotalPortfolioValue *DecimalValue          `protobuf:"bytes,3,opt,name=total_portfolio_value,json=totalPortfolioValue,proto3" json:"total_portfolio_value,omitempty"`
	CashBalance         *DecimalValue          `protobuf:"bytes,4,opt,name=cash_balance,json=cashBalance,proto3" json:"cash_balance,omitempty"`
	UpdatedAt           *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *PortfolioResponse) Reset() {
	*x = PortfolioResponse{}
	mi := &file_trading_api_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PortfolioResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortfolioResponse) ProtoMessage() {}

func (x *PortfolioResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trading_api_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortfolioResponse.ProtoReflect.Descriptor instead.
func (*PortfolioResponse) Descriptor() ([]byte, []int) {
	return file_trading_api_proto_rawDescGZIP(), []int{6}
}

func (x *PortfolioResponse) GetBotId() string {
	if x != nil {
		return x.BotId
	}
	return ""
}

func (x *PortfolioResponse) GetPositions() []*PortfolioPosition {
	if x != nil {
		return x.Positions
	}
	return nil
}

func (x *PortfolioResponse) GetTotalPortfolioValue() *DecimalValue {
	if x != nil {
		return x.TotalPortfolioValue
	}
	return nil
}

func (x *PortfolioResponse) GetCashBalance() *DecimalValue {
	if x != nil {
		return x.CashBalance
	}
	return nil
}

func (x *PortfolioResponse) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type PerformanceHistoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BotId         string                 `protobuf:"bytes,1,opt,name=bot_id,json=botId,proto3" json:"bot_id,omitempty"`
	StartTime     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PerformanceHistoryRequest) Reset() {
	*x = PerformanceHistoryRequest{}
	mi := &file_trading_api_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PerformanceHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PerformanceHistoryRequest) ProtoMessage() {}

func (x *PerformanceHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trading_api_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PerformanceHistoryRequest.ProtoReflect.Descriptor instead.
func (*PerformanceHistoryRequest) Descriptor() ([]byte, []int) {
	return file_trading_api_proto_rawDescGZIP(), []int{7}
}

func (x *PerformanceHistoryRequest) GetBotId() string {
	if x != nil {
		return x.BotId
	}
	return ""
}

func (x *PerformanceHistoryRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *PerformanceHistoryRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

type BotPerformanceSnapshot struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SnapshotTime  *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=snapshot_time,json=snapshotTime,proto3" json:"snapshot_time,omitempty"`
	EquityValue   *DecimalValue          `protobuf:"bytes,2,opt,name=equity_value,json=equityValue,proto3" json:"equity_value,omitempty"`
	CashBalance   *DecimalValue          `protobuf:"bytes,3,opt,name=cash_balance,json=cashBalance,proto3" json:"cash_balance,omitempty"`
	Pnl           *DecimalValue          `protobuf:"bytes,4,opt,name=pnl,proto3" json:"pnl,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BotPerformanceSnapshot) Reset() {
	*x = BotPerformanceSnapshot{}
	mi := &file_trading_api_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BotPerformanceSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BotPerformanceSnapshot) ProtoMessage() {}

func (x *BotPerformanceSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_trading_api_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BotPerformanceSnapshot.ProtoReflect.Descriptor instead.
func (*BotPerformanceSnapshot) Descriptor() ([]byte, []int) {
	return file_trading_api_proto_rawDescGZIP(), []int{8}
}

func (x *BotPerformanceSnapshot) GetSnapshotTime() *timestamppb.Timestamp {
	if x != nil {
		return x.SnapshotTime
	}
	return nil
}

func (x *BotPerformanceSnapshot) GetEquityValue() *DecimalValue {
	if x != nil {
		return x.EquityValue
	}
	return nil
}

func (x *BotPerformanceSnapshot) GetCashBalance() *DecimalValue {
	if x != nil {
		return x.CashBalance
	}
	return nil
}

func (x *BotPerformanceSnapshot) GetPnl() *DecimalValue {
	if x != nil {
		return x.Pnl
	}
	return nil
}

type PerformanceHistoryResponse struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Snapshots     []*BotPerformanceSnapshot `protobuf:"bytes,1,rep,name=snapshots,proto3" json:"snapshots,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PerformanceHistoryResponse) Reset() {
	*x = PerformanceHistoryResponse{}
	mi := &file_trading_api_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PerformanceHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PerformanceHistoryResponse) ProtoMessage() {}

func (x *PerformanceHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trading_api_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PerformanceHistoryResponse.ProtoReflect.Descriptor instead.
func (*PerformanceHistoryResponse) Descriptor() ([]byte, []int) {
	return file_trading_api_proto_rawDescGZIP(), []int{9}
}

func (x *PerformanceHistoryResponse) GetSnapshots() []*BotPerformanceSnapshot {
	if x != nil {
		return x.Snapshots
	}
	return nil
}

type Order struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Id                string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	BotId             string                 `protobuf:"bytes,2,opt,name=bot_id,json=botId,proto3" json:"bot_id,omitempty"`
	Symbol            string                 `protobuf:"bytes,3,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Side              OrderSide              `protobuf:"varint,4,opt,name=side,proto3,enum=trading.OrderSide" json:"side,omitempty"`
	Type              OrderType              `protobuf:"varint,5,opt,name=type,proto3,enum=trading.OrderType" json:"type,omitempty"`
	Status            OrderStatus            `protobuf:"varint,6,opt,name=status,proto3,enum=trading.OrderStatus" json:"status,omitempty"`
	QuantityRequested *DecimalValue          `protobuf:"bytes,7,opt,name=quantity_requested,json=quantityRequested,proto3" json:"quantity_requested,omitempty"`
	QuantityFilled    *DecimalValue          `protobuf:"bytes,8,opt,name=quantity_filled,json=quantityFilled,proto3" json:"quantity_filled,omitempty"`
	LimitPrice        *DecimalValue          `protobuf:"bytes,9,opt,name=limit_price,json=limitPrice,proto3,oneof" json:"limit_price,omitempty"`
	StopPrice         *DecimalValue          `protobuf:"bytes,10,opt,name=stop_price,json=stopPrice,proto3,oneof" json:"stop_price,omitempty"`
	CreatedAt         *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt         *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Trades            []*Trade               `protobuf:"bytes,13,rep,name=trades,proto3" json:"trades,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Order) Reset() {
	*x = Order{}
	mi := &file_trading_api_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Order) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Order) ProtoMessage() {}

func (x *Order) ProtoReflect() protoreflect.Message {
	mi := &file_trading_api_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Order.ProtoReflect.Descriptor instead.
func (*Order) Descriptor() ([]byte, []int) {
	return file_trading_api_proto_rawDescGZIP(), []int{10}
}

func (x *Order) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Order) GetBotId() string {
	if x != nil {
		return x.BotId
	}
	return ""
}

func (x *Order) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Order) GetSide() OrderSide {
	if x != nil {
		return x.Side
	}
	return OrderSide_ORDER_SIDE_UNSPECIFIED
}

func (x *Order) GetType() OrderType {
	if x != nil {
		return x.Type
	}
	return OrderType_ORDER_TYPE_UNSPECIFIED
}

func (x *Order) GetStatus() OrderStatus {
	if x != nil {
		return x.Status
	}
	return OrderStatus_ORDER_STATUS_UNSPECIFIED
}

func (x *Order) GetQuantityRequested() *DecimalValue {
	if x != nil {
		return x.QuantityRequested
	}
	return nil
}

func (x *Order) GetQuantityFilled() *DecimalValue {
	if x != nil {
		return x.QuantityFilled
	}
	return nil
}

func (x *Order) GetLimitPrice() *DecimalValue {
	if x != nil {
		return x.LimitPrice
	}
	return nil
}

func (x *Order) GetStopPrice() *DecimalValue {
	if x != nil {
		return x.StopPrice
	}
	return nil
}

func (x *Order) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Order) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Order) GetTrades() []*Trade {
	if x != nil {
		return x.Trades
	}
	return nil
}

type CreateOrderRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BotId         string                 `protobuf:"bytes,1,opt,name=bot_id,json=botId,proto3" json:"bot_id,omitempty"`
	Symbol        string                 `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Side          OrderSide              `protobuf:"varint,3,opt,name=side,proto3,enum=trading.OrderSide" json:"side,omitempty"`
	Type          OrderType              `protobuf:"varint,4,opt,name=type,proto3,enum=trading.OrderType" json:"type,omitempty"`
	Quantity      *DecimalValue          `protobuf:"bytes,5,opt,name=quantity,proto3" json:"quantity,omitempty"`
	LimitPrice    *DecimalValue          `protobuf:"bytes,6,opt,name=limit_price,json=limitPrice,proto3,oneof" json:"limit_price,omitempty"`
	StopPrice     *DecimalValue          `protobuf:"bytes,7,opt,name=stop_price,json=stopPrice,proto3,oneof" json:"stop_price,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateOrderRequest) Reset() {
	*x = CreateOrderRequest{}
	mi := &file_trading_api_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrderRequest) ProtoMessage() {}

func (x *CreateOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trading_api_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrderRequest.ProtoReflect.Descriptor instead.
func (*CreateOrderRequest) Descriptor() ([]byte, []int) {
	return file_trading_api_proto_rawDescGZIP(), []int{11}
}

func (x *CreateOrderRequest) GetBotId() string {
	if x != nil {
		return x.BotId
	}
	return ""
}

func (x *CreateOrderRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *CreateOrderRequest) GetSide() OrderSide {
	if x != nil {
		return x.Side
	}
	return OrderSide_ORDER_SIDE_UNSPECIFIED
}

func (x *CreateOrderRequest) GetType() OrderType {
	if x != nil {
		return x.Type
	}
	return OrderType_ORDER_TYPE_UNSPECIFIED
}

func (x *CreateOrderRequest) GetQuantity() *DecimalValue {
	if x != nil {
		return x.Quantity
	}
	return nil
}

func (x *CreateOrderRequest) GetLimitPrice() *DecimalValue {
	if x != nil {
		return x.LimitPrice
	}
	return nil
}

func (x *CreateOrderRequest) GetStopPrice() *DecimalValue {
	if x != nil {
		return x.StopPrice
	}
	return nil
}

type CancelOrderRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrderId       string                 `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	BotId         string                 `protobuf:"bytes,2,opt,name=bot_id,json=botId,proto3" json:"bot_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelOrderRequest) Reset() {
	*x = CancelOrderRequest{}
	mi := &file_trading_api_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelOrderRequest) ProtoMessage() {}

func (x *CancelOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trading_api_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelOrderRequest.ProtoReflect.Descriptor instead.
func (*CancelOrderRequest) Descriptor() ([]byte, []int) {
	return file_trading_api_proto_rawDescGZIP(), []int{12}
}

func (x *CancelOrderRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *CancelOrderRequest) GetBotId() string {
	if x != nil {
		return x.BotId
	}
	return ""
}

type GetOrderRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrderId       string                 `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetOrderRequest) Reset() {
	*x = GetOrderRequest{}
	mi := &file_trading_api_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderRequest) ProtoMessage() {}

func (x *GetOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trading_api_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderRequest.ProtoReflect.Descriptor instead.
func (*GetOrderRequest) Descriptor() ([]byte, []int) {
	return file_trading_api_proto_rawDescGZIP(), []int{13}
}

func (x *GetOrderRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type OrderBook struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Bids          []*OrderBookEntry      `protobuf:"bytes,1,rep,name=bids,proto3" json:"bids,omitempty"`
	Asks          []*OrderBookEntry      `protobuf:"bytes,2,rep,name=asks,proto3" json:"asks,omitempty"`
	Symbol        string                 `protobuf:"bytes,3,opt,name=symbol,proto3" json:"symbol,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrderBook) Reset() {
	*x = OrderBook{}
	mi := &file_trading_api_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderBook) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderBook) ProtoMessage() {}

func (x *OrderBook) ProtoReflect() protoreflect.Message {
	mi := &file_trading_api_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderBook.ProtoReflect.Descriptor instead.
func (*OrderBook) Descriptor() ([]byte, []int) {
	return file_trading_api_proto_rawDescGZIP(), []int{14}
}

func (x *OrderBook) GetBids() []*OrderBookEntry {
	if x != nil {
		return x.Bids
	}
	return nil
}

func (x *OrderBook) GetAsks() []*OrderBookEntry {
	if x != nil {
		return x.Asks
	}
	return nil
}

func (x *OrderBook) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

type OrderBookEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Price         float64                `protobuf:"fixed64,1,opt,name=price,proto3" json:"price,omitempty"`
	Size          float64                `protobuf:"fixed64,2,opt,name=size,proto3" json:"size,omitempty"`
	Timestamp     int64                  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // Unix epoch milliseconds
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrderBookEntry) Reset() {
	*x = OrderBookEntry{}
	mi := &file_trading_api_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderBookEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderBookEntry) ProtoMessage() {}

func (x *OrderBookEntry) ProtoReflect() protoreflect.Message {
	mi := &file_trading_api_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderBookEntry.ProtoReflect.Descriptor instead.
func (*OrderBookEntry) Descriptor() ([]byte, []int) {
	return file_trading_api_proto_rawDescGZIP(), []int{15}
}

func (x *OrderBookEntry) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *OrderBookEntry) GetSize() float64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *OrderBookEntry) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type OrderBookRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Symbol        string                 `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrderBookRequest) Reset() {
	*x = OrderBookRequest{}
	mi := &file_trading_api_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderBookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderBookRequest) ProtoMessage() {}

func (x *OrderBookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trading_api_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderBookRequest.ProtoReflect.Descriptor instead.
func (*OrderBookRequest) Descriptor() ([]byte, []int) {
	return file_trading_api_proto_rawDescGZIP(), []int{16}
}

func (x *OrderBookRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

type Trade struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	TradeId             string                 `protobuf:"bytes,1,opt,name=trade_id,json=tradeId,proto3" json:"trade_id,omitempty"`
	Symbol              string                 `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Side                string                 `protobuf:"bytes,3,opt,name=side,proto3" json:"side,omitempty"`
	Quantity            float64                `protobuf:"fixed64,4,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Price               float64                `protobuf:"fixed64,5,opt,name=price,proto3" json:"price,omitempty"`
	ExecutedAt          int64                  `protobuf:"varint,6,opt,name=executed_at,json=executedAt,proto3" json:"executed_at,omitempty"`
	StrategyId          string                 `protobuf:"bytes,7,opt,name=strategy_id,json=strategyId,proto3" json:"strategy_id,omitempty"`
	BotId               string                 `protobuf:"bytes,8,opt,name=bot_id,json=botId,proto3" json:"bot_id,omitempty"`
	Commission          *DecimalValue          `protobuf:"bytes,9,opt,name=commission,proto3,oneof" json:"commission,omitempty"`
	ExecutedAtTimestamp *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=executed_at_timestamp,json=executedAtTimestamp,proto3" json:"executed_at_timestamp,omitempty"`
	PnlRealized         *DecimalValue          `protobuf:"bytes,11,opt,name=pnl_realized,json=pnlRealized,proto3,oneof" json:"pnl_realized,omitempty"`
	PnlUnrealized       *DecimalValue          `protobuf:"bytes,12,opt,name=pnl_unrealized,json=pnlUnrealized,proto3,oneof" json:"pnl_unrealized,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *Trade) Reset() {
	*x = Trade{}
	mi := &file_trading_api_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Trade) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trade) ProtoMessage() {}

func (x *Trade) ProtoReflect() protoreflect.Message {
	mi := &file_trading_api_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trade.ProtoReflect.Descriptor instead.
func (*Trade) Descriptor() ([]byte, []int) {
	return file_trading_api_proto_rawDescGZIP(), []int{17}
}

func (x *Trade) GetTradeId() string {
	if x != nil {
		return x.TradeId
	}
	return ""
}

func (x *Trade) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Trade) GetSide() string {
	if x != nil {
		return x.Side
	}
	return ""
}

func (x *Trade) GetQuantity() float64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *Trade) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Trade) GetExecutedAt() int64 {
	if x != nil {
		return x.ExecutedAt
	}
	return 0
}

func (x *Trade) GetStrategyId() string {
	if x != nil {
		return x.StrategyId
	}
	return ""
}

func (x *Trade) GetBotId() string {
	if x != nil {
		return x.BotId
	}
	return ""
}

func (x *Trade) GetCommission() *DecimalValue {
	if x != nil {
		return x.Commission
	}
	return nil
}

func (x *Trade) GetExecutedAtTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.ExecutedAtTimestamp
	}
	return nil
}

func (x *Trade) GetPnlRealized() *DecimalValue {
	if x != nil {
		return x.PnlRealized
	}
	return nil
}

func (x *Trade) GetPnlUnrealized() *DecimalValue {
	if x != nil {
		return x.PnlUnrealized
	}
	return nil
}

type TradeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Symbol        string                 `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Side          string                 `protobuf:"bytes,2,opt,name=side,proto3" json:"side,omitempty"`
	Size          float64                `protobuf:"fixed64,3,opt,name=size,proto3" json:"size,omitempty"`
	Price         float64                `protobuf:"fixed64,4,opt,name=price,proto3" json:"price,omitempty"`
	StrategyId    string                 `protobuf:"bytes,5,opt,name=strategy_id,json=strategyId,proto3" json:"strategy_id,omitempty"`
	UserId        string                 `protobuf:"bytes,6,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	BotId         string                 `protobuf:"bytes,7,opt,name=bot_id,json=botId,proto3" json:"bot_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TradeRequest) Reset() {
	*x = TradeRequest{}
	mi := &file_trading_api_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TradeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeRequest) ProtoMessage() {}

func (x *TradeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trading_api_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeRequest.ProtoReflect.Descriptor instead.
func (*TradeRequest) Descriptor() ([]byte, []int) {
	return file_trading_api_proto_rawDescGZIP(), []int{18}
}

func (x *TradeRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *TradeRequest) GetSide() string {
	if x != nil {
		return x.Side
	}
	return ""
}

func (x *TradeRequest) GetSize() float64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *TradeRequest) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *TradeRequest) GetStrategyId() string {
	if x != nil {
		return x.StrategyId
	}
	return ""
}

func (x *TradeRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *TradeRequest) GetBotId() string {
	if x != nil {
		return x.BotId
	}
	return ""
}

type TradeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Accepted      bool                   `protobuf:"varint,1,opt,name=accepted,proto3" json:"accepted,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	ExecutedPrice float64                `protobuf:"fixed64,3,opt,name=executed_price,json=executedPrice,proto3" json:"executed_price,omitempty"`
	Pnl           float64                `protobuf:"fixed64,4,opt,name=pnl,proto3" json:"pnl,omitempty"` // realized PnL for closing trades (simplified)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TradeResponse) Reset() {
	*x = TradeResponse{}
	mi := &file_trading_api_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TradeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeResponse) ProtoMessage() {}

func (x *TradeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trading_api_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeResponse.ProtoReflect.Descriptor instead.
func (*TradeResponse) Descriptor() ([]byte, []int) {
	return file_trading_api_proto_rawDescGZIP(), []int{19}
}

func (x *TradeResponse) GetAccepted() bool {
	if x != nil {
		return x.Accepted
	}
	return false
}

func (x *TradeResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *TradeResponse) GetExecutedPrice() float64 {
	if x != nil {
		return x.ExecutedPrice
	}
	return 0
}

func (x *TradeResponse) GetPnl() float64 {
	if x != nil {
		return x.Pnl
	}
	return 0
}

type TradeHistoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	BotId         string                 `protobuf:"bytes,2,opt,name=bot_id,json=botId,proto3" json:"bot_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TradeHistoryRequest) Reset() {
	*x = TradeHistoryRequest{}
	mi := &file_trading_api_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TradeHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeHistoryRequest) ProtoMessage() {}

func (x *TradeHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trading_api_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeHistoryRequest.ProtoReflect.Descriptor instead.
func (*TradeHistoryRequest) Descriptor() ([]byte, []int) {
	return file_trading_api_proto_rawDescGZIP(), []int{20}
}

func (x *TradeHistoryRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *TradeHistoryRequest) GetBotId() string {
	if x != nil {
		return x.BotId
	}
	return ""
}

type TradeHistoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Trades        []*Trade               `protobuf:"bytes,1,rep,name=trades,proto3" json:"trades,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TradeHistoryResponse) Reset() {
	*x = TradeHistoryResponse{}
	mi := &file_trading_api_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TradeHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeHistoryResponse) ProtoMessage() {}

func (x *TradeHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trading_api_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeHistoryResponse.ProtoReflect.Descriptor instead.
func (*TradeHistoryResponse) Descriptor() ([]byte, []int) {
	return file_trading_api_proto_rawDescGZIP(), []int{21}
}

func (x *TradeHistoryResponse) GetTrades() []*Trade {
	if x != nil {
		return x.Trades
	}
	return nil
}

func (x *TradeHistoryResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type AuthRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password      string                 `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthRequest) Reset() {
	*x = AuthRequest{}
	mi := &file_trading_api_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthRequest) ProtoMessage() {}

func (x *AuthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trading_api_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthRequest.ProtoReflect.Descriptor instead.
func (*AuthRequest) Descriptor() ([]byte, []int) {
	return file_trading_api_proto_rawDescGZIP(), []int{22}
}

func (x *AuthRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AuthRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type AuthResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Token         string                 `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`                                         // JWT bearer token
	ExpiresAtUnix int64                  `protobuf:"varint,4,opt,name=expires_at_unix,json=expiresAtUnix,proto3" json:"expires_at_unix,omitempty"` // Expiration timestamp (seconds since epoch)
	RefreshToken  string                 `protobuf:"bytes,5,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthResponse) Reset() {
	*x = AuthResponse{}
	mi := &file_trading_api_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthResponse) ProtoMessage() {}

func (x *AuthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trading_api_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthResponse.ProtoReflect.Descriptor instead.
func (*AuthResponse) Descriptor() ([]byte, []int) {
	return file_trading_api_proto_rawDescGZIP(), []int{23}
}

func (x *AuthResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AuthResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AuthResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *AuthResponse) GetExpiresAtUnix() int64 {
	if x != nil {
		return x.ExpiresAtUnix
	}
	return 0
}

func (x *AuthResponse) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

type GetUserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserRequest) Reset() {
	*x = GetUserRequest{}
	mi := &file_trading_api_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRequest) ProtoMessage() {}

func (x *GetUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trading_api_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRequest.ProtoReflect.Descriptor instead.
func (*GetUserRequest) Descriptor() ([]byte, []int) {
	return file_trading_api_proto_rawDescGZIP(), []int{24}
}

func (x *GetUserRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type RegisterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password      string                 `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"` // Plaintext over TLS; will be hashed server-side
	Email         string                 `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterRequest) Reset() {
	*x = RegisterRequest{}
	mi := &file_trading_api_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRequest) ProtoMessage() {}

func (x *RegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trading_api_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterRequest.ProtoReflect.Descriptor instead.
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return file_trading_api_proto_rawDescGZIP(), []int{25}
}

func (x *RegisterRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *RegisterRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *RegisterRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type UserInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Email         string                 `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	CreatedAtUnix int64                  `protobuf:"varint,3,opt,name=created_at_unix,json=createdAtUnix,proto3" json:"created_at_unix,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserInfo) Reset() {
	*x = UserInfo{}
	mi := &file_trading_api_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfo) ProtoMessage() {}

func (x *UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_trading_api_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfo.ProtoReflect.Descriptor instead.
func (*UserInfo) Descriptor() ([]byte, []int) {
	return file_trading_api_proto_rawDescGZIP(), []int{26}
}

func (x *UserInfo) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UserInfo) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserInfo) GetCreatedAtUnix() int64 {
	if x != nil {
		return x.CreatedAtUnix
	}
	return 0
}

type RefreshTokenRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RefreshToken  string                 `protobuf:"bytes,1,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RefreshTokenRequest) Reset() {
	*x = RefreshTokenRequest{}
	mi := &file_trading_api_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefreshTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshTokenRequest) ProtoMessage() {}

func (x *RefreshTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trading_api_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshTokenRequest.ProtoReflect.Descriptor instead.
func (*RefreshTokenRequest) Descriptor() ([]byte, []int) {
	return file_trading_api_proto_rawDescGZIP(), []int{27}
}

func (x *RefreshTokenRequest) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

type Bot struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	BotId               string                 `protobuf:"bytes,1,opt,name=bot_id,json=botId,proto3" json:"bot_id,omitempty"`
	Symbol              string                 `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Strategy            string                 `protobuf:"bytes,3,opt,name=strategy,proto3" json:"strategy,omitempty"`
	Parameters          map[string]string      `protobuf:"bytes,4,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	IsActive            bool                   `protobuf:"varint,5,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	CreatedAtUnixMs     int64                  `protobuf:"varint,6,opt,name=created_at_unix_ms,json=createdAtUnixMs,proto3" json:"created_at_unix_ms,omitempty"`
	Name                string                 `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	UserId              string                 `protobuf:"bytes,8,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	AccountValue        float64                `protobuf:"fixed64,9,opt,name=account_value,json=accountValue,proto3" json:"account_value,omitempty"`
	Description         string                 `protobuf:"bytes,10,opt,name=description,proto3" json:"description,omitempty"`
	InitialAccountValue *DecimalValue          `protobuf:"bytes,11,opt,name=initial_account_value,json=initialAccountValue,proto3" json:"initial_account_value,omitempty"`
	CurrentAccountValue *DecimalValue          `protobuf:"bytes,12,opt,name=current_account_value,json=currentAccountValue,proto3" json:"current_account_value,omitempty"`
	IsLive              bool                   `protobuf:"varint,13,opt,name=is_live,json=isLive,proto3" json:"is_live,omitempty"`
	CreatedAt           *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt           *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *Bot) Reset() {
	*x = Bot{}
	mi := &file_trading_api_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Bot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bot) ProtoMessage() {}

func (x *Bot) ProtoReflect() protoreflect.Message {
	mi := &file_trading_api_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bot.ProtoReflect.Descriptor instead.
func (*Bot) Descriptor() ([]byte, []int) {
	return file_trading_api_proto_rawDescGZIP(), []int{28}
}

func (x *Bot) GetBotId() string {
	if x != nil {
		return x.BotId
	}
	return ""
}

func (x *Bot) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Bot) GetStrategy() string {
	if x != nil {
		return x.Strategy
	}
	return ""
}

func (x *Bot) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *Bot) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *Bot) GetCreatedAtUnixMs() int64 {
	if x != nil {
		return x.CreatedAtUnixMs
	}
	return 0
}

func (x *Bot) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Bot) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Bot) GetAccountValue() float64 {
	if x != nil {
		return x.AccountValue
	}
	return 0
}

func (x *Bot) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Bot) GetInitialAccountValue() *DecimalValue {
	if x != nil {
		return x.InitialAccountValue
	}
	return nil
}

func (x *Bot) GetCurrentAccountValue() *DecimalValue {
	if x != nil {
		return x.CurrentAccountValue
	}
	return nil
}

func (x *Bot) GetIsLive() bool {
	if x != nil {
		return x.IsLive
	}
	return false
}

func (x *Bot) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Bot) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type UpdateBotRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BotId         string                 `protobuf:"bytes,1,opt,name=bot_id,json=botId,proto3" json:"bot_id,omitempty"`
	Name          *string                `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Description   *string                `protobuf:"bytes,3,opt,name=description,proto3,oneof" json:"description,omitempty"`
	IsActive      *bool                  `protobuf:"varint,4,opt,name=is_active,json=isActive,proto3,oneof" json:"is_active,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateBotRequest) Reset() {
	*x = UpdateBotRequest{}
	mi := &file_trading_api_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateBotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBotRequest) ProtoMessage() {}

func (x *UpdateBotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trading_api_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBotRequest.ProtoReflect.Descriptor instead.
func (*UpdateBotRequest) Descriptor() ([]byte, []int) {
	return file_trading_api_proto_rawDescGZIP(), []int{29}
}

func (x *UpdateBotRequest) GetBotId() string {
	if x != nil {
		return x.BotId
	}
	return ""
}

func (x *UpdateBotRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateBotRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *UpdateBotRequest) GetIsActive() bool {
	if x != nil && x.IsActive != nil {
		return *x.IsActive
	}
	return false
}

type CreateBotRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Symbol        string                 `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Strategy      string                 `protobuf:"bytes,2,opt,name=strategy,proto3" json:"strategy,omitempty"`
	Parameters    map[string]string      `protobuf:"bytes,3,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Name          string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	AccountValue  float64                `protobuf:"fixed64,5,opt,name=account_value,json=accountValue,proto3" json:"account_value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateBotRequest) Reset() {
	*x = CreateBotRequest{}
	mi := &file_trading_api_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBotRequest) ProtoMessage() {}

func (x *CreateBotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trading_api_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBotRequest.ProtoReflect.Descriptor instead.
func (*CreateBotRequest) Descriptor() ([]byte, []int) {
	return file_trading_api_proto_rawDescGZIP(), []int{30}
}

func (x *CreateBotRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *CreateBotRequest) GetStrategy() string {
	if x != nil {
		return x.Strategy
	}
	return ""
}

func (x *CreateBotRequest) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *CreateBotRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateBotRequest) GetAccountValue() float64 {
	if x != nil {
		return x.AccountValue
	}
	return 0
}

type BotIdRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BotId         string                 `protobuf:"bytes,1,opt,name=bot_id,json=botId,proto3" json:"bot_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BotIdRequest) Reset() {
	*x = BotIdRequest{}
	mi := &file_trading_api_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BotIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BotIdRequest) ProtoMessage() {}

func (x *BotIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trading_api_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BotIdRequest.ProtoReflect.Descriptor instead.
func (*BotIdRequest) Descriptor() ([]byte, []int) {
	return file_trading_api_proto_rawDescGZIP(), []int{31}
}

func (x *BotIdRequest) GetBotId() string {
	if x != nil {
		return x.BotId
	}
	return ""
}

type ListBotsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListBotsRequest) Reset() {
	*x = ListBotsRequest{}
	mi := &file_trading_api_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListBotsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBotsRequest) ProtoMessage() {}

func (x *ListBotsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trading_api_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBotsRequest.ProtoReflect.Descriptor instead.
func (*ListBotsRequest) Descriptor() ([]byte, []int) {
	return file_trading_api_proto_rawDescGZIP(), []int{32}
}

func (x *ListBotsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type BotList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Bots          []*Bot                 `protobuf:"bytes,1,rep,name=bots,proto3" json:"bots,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BotList) Reset() {
	*x = BotList{}
	mi := &file_trading_api_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BotList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BotList) ProtoMessage() {}

func (x *BotList) ProtoReflect() protoreflect.Message {
	mi := &file_trading_api_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BotList.ProtoReflect.Descriptor instead.
func (*BotList) Descriptor() ([]byte, []int) {
	return file_trading_api_proto_rawDescGZIP(), []int{33}
}

func (x *BotList) GetBots() []*Bot {
	if x != nil {
		return x.Bots
	}
	return nil
}

type VaRRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	CurrentPortfolio *PortfolioResponse     `protobuf:"bytes,1,opt,name=current_portfolio,json=currentPortfolio,proto3" json:"current_portfolio,omitempty"`
	RiskModel        string                 `protobuf:"bytes,2,opt,name=risk_model,json=riskModel,proto3" json:"risk_model,omitempty"`                     // e.g. "historical", "monte_carlo"
	ConfidenceLevel  float64                `protobuf:"fixed64,3,opt,name=confidence_level,json=confidenceLevel,proto3" json:"confidence_level,omitempty"` // e.g. 0.95
	HorizonDays      float64                `protobuf:"fixed64,4,opt,name=horizon_days,json=horizonDays,proto3" json:"horizon_days,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *VaRRequest) Reset() {
	*x = VaRRequest{}
	mi := &file_trading_api_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VaRRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VaRRequest) ProtoMessage() {}

func (x *VaRRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trading_api_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VaRRequest.ProtoReflect.Descriptor instead.
func (*VaRRequest) Descriptor() ([]byte, []int) {
	return file_trading_api_proto_rawDescGZIP(), []int{34}
}

func (x *VaRRequest) GetCurrentPortfolio() *PortfolioResponse {
	if x != nil {
		return x.CurrentPortfolio
	}
	return nil
}

func (x *VaRRequest) GetRiskModel() string {
	if x != nil {
		return x.RiskModel
	}
	return ""
}

func (x *VaRRequest) GetConfidenceLevel() float64 {
	if x != nil {
		return x.ConfidenceLevel
	}
	return 0
}

func (x *VaRRequest) GetHorizonDays() float64 {
	if x != nil {
		return x.HorizonDays
	}
	return 0
}

type VaRResponse struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	ValueAtRisk        *DecimalValue          `protobuf:"bytes,1,opt,name=value_at_risk,json=valueAtRisk,proto3" json:"value_at_risk,omitempty"`
	AssetNames         []string               `protobuf:"bytes,2,rep,name=asset_names,json=assetNames,proto3" json:"asset_names,omitempty"`
	CorrelationMatrix  []float64              `protobuf:"fixed64,3,rep,packed,name=correlation_matrix,json=correlationMatrix,proto3" json:"correlation_matrix,omitempty"`
	VolatilityPerAsset []float64              `protobuf:"fixed64,4,rep,packed,name=volatility_per_asset,json=volatilityPerAsset,proto3" json:"volatility_per_asset,omitempty"`
	SimulationMode     string                 `protobuf:"bytes,5,opt,name=simulation_mode,json=simulationMode,proto3" json:"simulation_mode,omitempty"`
	LastUpdate         *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=last_update,json=lastUpdate,proto3" json:"last_update,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *VaRResponse) Reset() {
	*x = VaRResponse{}
	mi := &file_trading_api_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VaRResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VaRResponse) ProtoMessage() {}

func (x *VaRResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trading_api_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VaRResponse.ProtoReflect.Descriptor instead.
func (*VaRResponse) Descriptor() ([]byte, []int) {
	return file_trading_api_proto_rawDescGZIP(), []int{35}
}

func (x *VaRResponse) GetValueAtRisk() *DecimalValue {
	if x != nil {
		return x.ValueAtRisk
	}
	return nil
}

func (x *VaRResponse) GetAssetNames() []string {
	if x != nil {
		return x.AssetNames
	}
	return nil
}

func (x *VaRResponse) GetCorrelationMatrix() []float64 {
	if x != nil {
		return x.CorrelationMatrix
	}
	return nil
}

func (x *VaRResponse) GetVolatilityPerAsset() []float64 {
	if x != nil {
		return x.VolatilityPerAsset
	}
	return nil
}

func (x *VaRResponse) GetSimulationMode() string {
	if x != nil {
		return x.SimulationMode
	}
	return ""
}

func (x *VaRResponse) GetLastUpdate() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdate
	}
	return nil
}

type MomentumRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Symbols       []string               `protobuf:"bytes,1,rep,name=symbols,proto3" json:"symbols,omitempty"` // optional filter list
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MomentumRequest) Reset() {
	*x = MomentumRequest{}
	mi := &file_trading_api_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MomentumRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MomentumRequest) ProtoMessage() {}

func (x *MomentumRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trading_api_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MomentumRequest.ProtoReflect.Descriptor instead.
func (*MomentumRequest) Descriptor() ([]byte, []int) {
	return file_trading_api_proto_rawDescGZIP(), []int{36}
}

func (x *MomentumRequest) GetSymbols() []string {
	if x != nil {
		return x.Symbols
	}
	return nil
}

type MomentumMetric struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Symbol        string                 `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	LastPrice     float64                `protobuf:"fixed64,2,opt,name=last_price,json=lastPrice,proto3" json:"last_price,omitempty"`
	PctChange_1M  float64                `protobuf:"fixed64,3,opt,name=pct_change_1m,json=pctChange1m,proto3" json:"pct_change_1m,omitempty"`     // percentage change over ~1 minute
	PctChange_5M  float64                `protobuf:"fixed64,4,opt,name=pct_change_5m,json=pctChange5m,proto3" json:"pct_change_5m,omitempty"`     // percentage change over ~5 minutes
	Volatility    float64                `protobuf:"fixed64,5,opt,name=volatility,proto3" json:"volatility,omitempty"`                            // standard deviation of log returns (annualized approximation)
	MomentumScore float64                `protobuf:"fixed64,6,opt,name=momentum_score,json=momentumScore,proto3" json:"momentum_score,omitempty"` // composite score (weighted changes - volatility penalty)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MomentumMetric) Reset() {
	*x = MomentumMetric{}
	mi := &file_trading_api_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MomentumMetric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MomentumMetric) ProtoMessage() {}

func (x *MomentumMetric) ProtoReflect() protoreflect.Message {
	mi := &file_trading_api_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MomentumMetric.ProtoReflect.Descriptor instead.
func (*MomentumMetric) Descriptor() ([]byte, []int) {
	return file_trading_api_proto_rawDescGZIP(), []int{37}
}

func (x *MomentumMetric) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *MomentumMetric) GetLastPrice() float64 {
	if x != nil {
		return x.LastPrice
	}
	return 0
}

func (x *MomentumMetric) GetPctChange_1M() float64 {
	if x != nil {
		return x.PctChange_1M
	}
	return 0
}

func (x *MomentumMetric) GetPctChange_5M() float64 {
	if x != nil {
		return x.PctChange_5M
	}
	return 0
}

func (x *MomentumMetric) GetVolatility() float64 {
	if x != nil {
		return x.Volatility
	}
	return 0
}

func (x *MomentumMetric) GetMomentumScore() float64 {
	if x != nil {
		return x.MomentumScore
	}
	return 0
}

type MomentumResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Metrics           []*MomentumMetric      `protobuf:"bytes,1,rep,name=metrics,proto3" json:"metrics,omitempty"`
	GeneratedAtUnixMs int64                  `protobuf:"varint,2,opt,name=generated_at_unix_ms,json=generatedAtUnixMs,proto3" json:"generated_at_unix_ms,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *MomentumResponse) Reset() {
	*x = MomentumResponse{}
	mi := &file_trading_api_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MomentumResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MomentumResponse) ProtoMessage() {}

func (x *MomentumResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trading_api_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MomentumResponse.ProtoReflect.Descriptor instead.
func (*MomentumResponse) Descriptor() ([]byte, []int) {
	return file_trading_api_proto_rawDescGZIP(), []int{38}
}

func (x *MomentumResponse) GetMetrics() []*MomentumMetric {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *MomentumResponse) GetGeneratedAtUnixMs() int64 {
	if x != nil {
		return x.GeneratedAtUnixMs
	}
	return 0
}

type Tick struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Symbol        string                 `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Price         float64                `protobuf:"fixed64,2,opt,name=price,proto3" json:"price,omitempty"`
	TimestampNs   int64                  `protobuf:"varint,3,opt,name=timestamp_ns,json=timestampNs,proto3" json:"timestamp_ns,omitempty"` // Nanosecond precision timestamp
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Tick) Reset() {
	*x = Tick{}
	mi := &file_trading_api_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tick) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tick) ProtoMessage() {}

func (x *Tick) ProtoReflect() protoreflect.Message {
	mi := &file_trading_api_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tick.ProtoReflect.Descriptor instead.
func (*Tick) Descriptor() ([]byte, []int) {
	return file_trading_api_proto_rawDescGZIP(), []int{39}
}

func (x *Tick) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Tick) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Tick) GetTimestampNs() int64 {
	if x != nil {
		return x.TimestampNs
	}
	return 0
}

type TickStreamRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Symbol        string                 `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TickStreamRequest) Reset() {
	*x = TickStreamRequest{}
	mi := &file_trading_api_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TickStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TickStreamRequest) ProtoMessage() {}

func (x *TickStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trading_api_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TickStreamRequest.ProtoReflect.Descriptor instead.
func (*TickStreamRequest) Descriptor() ([]byte, []int) {
	return file_trading_api_proto_rawDescGZIP(), []int{40}
}

func (x *TickStreamRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

type SymbolRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Symbol        string                 `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SymbolRequest) Reset() {
	*x = SymbolRequest{}
	mi := &file_trading_api_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SymbolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SymbolRequest) ProtoMessage() {}

func (x *SymbolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trading_api_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SymbolRequest.ProtoReflect.Descriptor instead.
func (*SymbolRequest) Descriptor() ([]byte, []int) {
	return file_trading_api_proto_rawDescGZIP(), []int{41}
}

func (x *SymbolRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

type SymbolList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Symbols       []string               `protobuf:"bytes,1,rep,name=symbols,proto3" json:"symbols,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SymbolList) Reset() {
	*x = SymbolList{}
	mi := &file_trading_api_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SymbolList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SymbolList) ProtoMessage() {}

func (x *SymbolList) ProtoReflect() protoreflect.Message {
	mi := &file_trading_api_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SymbolList.ProtoReflect.Descriptor instead.
func (*SymbolList) Descriptor() ([]byte, []int) {
	return file_trading_api_proto_rawDescGZIP(), []int{42}
}

func (x *SymbolList) GetSymbols() []string {
	if x != nil {
		return x.Symbols
	}
	return nil
}

type StrategyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StrategyId    string                 `protobuf:"bytes,1,opt,name=strategy_id,json=strategyId,proto3" json:"strategy_id,omitempty"`
	Symbol        string                 `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Parameters    map[string]string      `protobuf:"bytes,3,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	UserId        string                 `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StrategyRequest) Reset() {
	*x = StrategyRequest{}
	mi := &file_trading_api_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StrategyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StrategyRequest) ProtoMessage() {}

func (x *StrategyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trading_api_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StrategyRequest.ProtoReflect.Descriptor instead.
func (*StrategyRequest) Descriptor() ([]byte, []int) {
	return file_trading_api_proto_rawDescGZIP(), []int{43}
}

func (x *StrategyRequest) GetStrategyId() string {
	if x != nil {
		return x.StrategyId
	}
	return ""
}

func (x *StrategyRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *StrategyRequest) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *StrategyRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

var File_trading_api_proto protoreflect.FileDescriptor

const file_trading_api_proto_rawDesc = "" +
	"\n" +
	"\x11trading_api.proto\x12\atrading\x1a\x1fgoogle/protobuf/timestamp.proto\"\a\n" +
	"\x05Empty\":\n" +
	"\fDecimalValue\x12\x14\n" +
	"\x05units\x18\x01 \x01(\x03R\x05units\x12\x14\n" +
	"\x05nanos\x18\x02 \x01(\x0fR\x05nanos\"T\n" +
	"\x0eStatusResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x0e\n" +
	"\x02id\x18\x03 \x01(\tR\x02id\":\n" +
	"\n" +
	"Pagination\x12\x14\n" +
	"\x05limit\x18\x01 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x05R\x06offset\")\n" +
	"\x10PortfolioRequest\x12\x15\n" +
	"\x06bot_id\x18\x01 \x01(\tR\x05botId\"\xcc\x02\n" +
	"\x11PortfolioPosition\x12\x16\n" +
	"\x06symbol\x18\x01 \x01(\tR\x06symbol\x121\n" +
	"\bquantity\x18\x02 \x01(\v2\x15.trading.DecimalValueR\bquantity\x12:\n" +
	"\raverage_price\x18\x03 \x01(\v2\x15.trading.DecimalValueR\faveragePrice\x128\n" +
	"\fmarket_value\x18\x04 \x01(\v2\x15.trading.DecimalValueR\vmarketValue\x12<\n" +
	"\x0eunrealized_pnl\x18\x05 \x01(\v2\x15.trading.DecimalValueR\runrealizedPnl\x128\n" +
	"\fexposure_pct\x18\x06 \x01(\v2\x15.trading.DecimalValueR\vexposurePct\"\xa4\x02\n" +
	"\x11PortfolioResponse\x12\x15\n" +
	"\x06bot_id\x18\x01 \x01(\tR\x05botId\x128\n" +
	"\tpositions\x18\x02 \x03(\v2\x1a.trading.PortfolioPositionR\tpositions\x12I\n" +
	"\x15total_portfolio_value\x18\x03 \x01(\v2\x15.trading.DecimalValueR\x13totalPortfolioValue\x128\n" +
	"\fcash_balance\x18\x04 \x01(\v2\x15.trading.DecimalValueR\vcashBalance\x129\n" +
	"\n" +
	"updated_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"\xa4\x01\n" +
	"\x19PerformanceHistoryRequest\x12\x15\n" +
	"\x06bot_id\x18\x01 \x01(\tR\x05botId\x129\n" +
	"\n" +
	"start_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bend_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\"\xf6\x01\n" +
	"\x16BotPerformanceSnapshot\x12?\n" +
	"\rsnapshot_time\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\fsnapshotTime\x128\n" +
	"\fequity_value\x18\x02 \x01(\v2\x15.trading.DecimalValueR\vequityValue\x128\n" +
	"\fcash_balance\x18\x03 \x01(\v2\x15.trading.DecimalValueR\vcashBalance\x12'\n" +
	"\x03pnl\x18\x04 \x01(\v2\x15.trading.DecimalValueR\x03pnl\"[\n" +
	"\x1aPerformanceHistoryResponse\x12=\n" +
	"\tsnapshots\x18\x01 \x03(\v2\x1f.trading.BotPerformanceSnapshotR\tsnapshots\"\xff\x04\n" +
	"\x05Order\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x15\n" +
	"\x06bot_id\x18\x02 \x01(\tR\x05botId\x12\x16\n" +
	"\x06symbol\x18\x03 \x01(\tR\x06symbol\x12&\n" +
	"\x04side\x18\x04 \x01(\x0e2\x12.trading.OrderSideR\x04side\x12&\n" +
	"\x04type\x18\x05 \x01(\x0e2\x12.trading.OrderTypeR\x04type\x12,\n" +
	"\x06status\x18\x06 \x01(\x0e2\x14.trading.OrderStatusR\x06status\x12D\n" +
	"\x12quantity_requested\x18\a \x01(\v2\x15.trading.DecimalValueR\x11quantityRequested\x12>\n" +
	"\x0fquantity_filled\x18\b \x01(\v2\x15.trading.DecimalValueR\x0equantityFilled\x12;\n" +
	"\vlimit_price\x18\t \x01(\v2\x15.trading.DecimalValueH\x00R\n" +
	"limitPrice\x88\x01\x01\x129\n" +
	"\n" +
	"stop_price\x18\n" +
	" \x01(\v2\x15.trading.DecimalValueH\x01R\tstopPrice\x88\x01\x01\x129\n" +
	"\n" +
	"created_at\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\f \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12&\n" +
	"\x06trades\x18\r \x03(\v2\x0e.trading.TradeR\x06tradesB\x0e\n" +
	"\f_limit_priceB\r\n" +
	"\v_stop_price\"\xdd\x02\n" +
	"\x12CreateOrderRequest\x12\x15\n" +
	"\x06bot_id\x18\x01 \x01(\tR\x05botId\x12\x16\n" +
	"\x06symbol\x18\x02 \x01(\tR\x06symbol\x12&\n" +
	"\x04side\x18\x03 \x01(\x0e2\x12.trading.OrderSideR\x04side\x12&\n" +
	"\x04type\x18\x04 \x01(\x0e2\x12.trading.OrderTypeR\x04type\x121\n" +
	"\bquantity\x18\x05 \x01(\v2\x15.trading.DecimalValueR\bquantity\x12;\n" +
	"\vlimit_price\x18\x06 \x01(\v2\x15.trading.DecimalValueH\x00R\n" +
	"limitPrice\x88\x01\x01\x129\n" +
	"\n" +
	"stop_price\x18\a \x01(\v2\x15.trading.DecimalValueH\x01R\tstopPrice\x88\x01\x01B\x0e\n" +
	"\f_limit_priceB\r\n" +
	"\v_stop_price\"F\n" +
	"\x12CancelOrderRequest\x12\x19\n" +
	"\border_id\x18\x01 \x01(\tR\aorderId\x12\x15\n" +
	"\x06bot_id\x18\x02 \x01(\tR\x05botId\",\n" +
	"\x0fGetOrderRequest\x12\x19\n" +
	"\border_id\x18\x01 \x01(\tR\aorderId\"}\n" +
	"\tOrderBook\x12+\n" +
	"\x04bids\x18\x01 \x03(\v2\x17.trading.OrderBookEntryR\x04bids\x12+\n" +
	"\x04asks\x18\x02 \x03(\v2\x17.trading.OrderBookEntryR\x04asks\x12\x16\n" +
	"\x06symbol\x18\x03 \x01(\tR\x06symbol\"X\n" +
	"\x0eOrderBookEntry\x12\x14\n" +
	"\x05price\x18\x01 \x01(\x01R\x05price\x12\x12\n" +
	"\x04size\x18\x02 \x01(\x01R\x04size\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\x03R\ttimestamp\"*\n" +
	"\x10OrderBookRequest\x12\x16\n" +
	"\x06symbol\x18\x01 \x01(\tR\x06symbol\"\x9a\x04\n" +
	"\x05Trade\x12\x19\n" +
	"\btrade_id\x18\x01 \x01(\tR\atradeId\x12\x16\n" +
	"\x06symbol\x18\x02 \x01(\tR\x06symbol\x12\x12\n" +
	"\x04side\x18\x03 \x01(\tR\x04side\x12\x1a\n" +
	"\bquantity\x18\x04 \x01(\x01R\bquantity\x12\x14\n" +
	"\x05price\x18\x05 \x01(\x01R\x05price\x12\x1f\n" +
	"\vexecuted_at\x18\x06 \x01(\x03R\n" +
	"executedAt\x12\x1f\n" +
	"\vstrategy_id\x18\a \x01(\tR\n" +
	"strategyId\x12\x15\n" +
	"\x06bot_id\x18\b \x01(\tR\x05botId\x12:\n" +
	"\n" +
	"commission\x18\t \x01(\v2\x15.trading.DecimalValueH\x00R\n" +
	"commission\x88\x01\x01\x12N\n" +
	"\x15executed_at_timestamp\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\x13executedAtTimestamp\x12=\n" +
	"\fpnl_realized\x18\v \x01(\v2\x15.trading.DecimalValueH\x01R\vpnlRealized\x88\x01\x01\x12A\n" +
	"\x0epnl_unrealized\x18\f \x01(\v2\x15.trading.DecimalValueH\x02R\rpnlUnrealized\x88\x01\x01B\r\n" +
	"\v_commissionB\x0f\n" +
	"\r_pnl_realizedB\x11\n" +
	"\x0f_pnl_unrealized\"\xb5\x01\n" +
	"\fTradeRequest\x12\x16\n" +
	"\x06symbol\x18\x01 \x01(\tR\x06symbol\x12\x12\n" +
	"\x04side\x18\x02 \x01(\tR\x04side\x12\x12\n" +
	"\x04size\x18\x03 \x01(\x01R\x04size\x12\x14\n" +
	"\x05price\x18\x04 \x01(\x01R\x05price\x12\x1f\n" +
	"\vstrategy_id\x18\x05 \x01(\tR\n" +
	"strategyId\x12\x17\n" +
	"\auser_id\x18\x06 \x01(\tR\x06userId\x12\x15\n" +
	"\x06bot_id\x18\a \x01(\tR\x05botId\"~\n" +
	"\rTradeResponse\x12\x1a\n" +
	"\baccepted\x18\x01 \x01(\bR\baccepted\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12%\n" +
	"\x0eexecuted_price\x18\x03 \x01(\x01R\rexecutedPrice\x12\x10\n" +
	"\x03pnl\x18\x04 \x01(\x01R\x03pnl\"E\n" +
	"\x13TradeHistoryRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x15\n" +
	"\x06bot_id\x18\x02 \x01(\tR\x05botId\"_\n" +
	"\x14TradeHistoryResponse\x12&\n" +
	"\x06trades\x18\x01 \x03(\v2\x0e.trading.TradeR\x06trades\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"E\n" +
	"\vAuthRequest\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x02 \x01(\tR\bpassword\"\xa5\x01\n" +
	"\fAuthResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x14\n" +
	"\x05token\x18\x03 \x01(\tR\x05token\x12&\n" +
	"\x0fexpires_at_unix\x18\x04 \x01(\x03R\rexpiresAtUnix\x12#\n" +
	"\rrefresh_token\x18\x05 \x01(\tR\frefreshToken\",\n" +
	"\x0eGetUserRequest\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\"_\n" +
	"\x0fRegisterRequest\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x02 \x01(\tR\bpassword\x12\x14\n" +
	"\x05email\x18\x03 \x01(\tR\x05email\"d\n" +
	"\bUserInfo\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\x12\x14\n" +
	"\x05email\x18\x02 \x01(\tR\x05email\x12&\n" +
	"\x0fcreated_at_unix\x18\x03 \x01(\x03R\rcreatedAtUnix\":\n" +
	"\x13RefreshTokenRequest\x12#\n" +
	"\rrefresh_token\x18\x01 \x01(\tR\frefreshToken\"\xb0\x05\n" +
	"\x03Bot\x12\x15\n" +
	"\x06bot_id\x18\x01 \x01(\tR\x05botId\x12\x16\n" +
	"\x06symbol\x18\x02 \x01(\tR\x06symbol\x12\x1a\n" +
	"\bstrategy\x18\x03 \x01(\tR\bstrategy\x12<\n" +
	"\n" +
	"parameters\x18\x04 \x03(\v2\x1c.trading.Bot.ParametersEntryR\n" +
	"parameters\x12\x1b\n" +
	"\tis_active\x18\x05 \x01(\bR\bisActive\x12+\n" +
	"\x12created_at_unix_ms\x18\x06 \x01(\x03R\x0fcreatedAtUnixMs\x12\x12\n" +
	"\x04name\x18\a \x01(\tR\x04name\x12\x17\n" +
	"\auser_id\x18\b \x01(\tR\x06userId\x12#\n" +
	"\raccount_value\x18\t \x01(\x01R\faccountValue\x12 \n" +
	"\vdescription\x18\n" +
	" \x01(\tR\vdescription\x12I\n" +
	"\x15initial_account_value\x18\v \x01(\v2\x15.trading.DecimalValueR\x13initialAccountValue\x12I\n" +
	"\x15current_account_value\x18\f \x01(\v2\x15.trading.DecimalValueR\x13currentAccountValue\x12\x17\n" +
	"\ais_live\x18\r \x01(\bR\x06isLive\x129\n" +
	"\n" +
	"created_at\x18\x0e \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x0f \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x1a=\n" +
	"\x0fParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb2\x01\n" +
	"\x10UpdateBotRequest\x12\x15\n" +
	"\x06bot_id\x18\x01 \x01(\tR\x05botId\x12\x17\n" +
	"\x04name\x18\x02 \x01(\tH\x00R\x04name\x88\x01\x01\x12%\n" +
	"\vdescription\x18\x03 \x01(\tH\x01R\vdescription\x88\x01\x01\x12 \n" +
	"\tis_active\x18\x04 \x01(\bH\x02R\bisActive\x88\x01\x01B\a\n" +
	"\x05_nameB\x0e\n" +
	"\f_descriptionB\f\n" +
	"\n" +
	"_is_active\"\x89\x02\n" +
	"\x10CreateBotRequest\x12\x16\n" +
	"\x06symbol\x18\x01 \x01(\tR\x06symbol\x12\x1a\n" +
	"\bstrategy\x18\x02 \x01(\tR\bstrategy\x12I\n" +
	"\n" +
	"parameters\x18\x03 \x03(\v2).trading.CreateBotRequest.ParametersEntryR\n" +
	"parameters\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\x12#\n" +
	"\raccount_value\x18\x05 \x01(\x01R\faccountValue\x1a=\n" +
	"\x0fParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"%\n" +
	"\fBotIdRequest\x12\x15\n" +
	"\x06bot_id\x18\x01 \x01(\tR\x05botId\"*\n" +
	"\x0fListBotsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\"+\n" +
	"\aBotList\x12 \n" +
	"\x04bots\x18\x01 \x03(\v2\f.trading.BotR\x04bots\"\xc2\x01\n" +
	"\n" +
	"VaRRequest\x12G\n" +
	"\x11current_portfolio\x18\x01 \x01(\v2\x1a.trading.PortfolioResponseR\x10currentPortfolio\x12\x1d\n" +
	"\n" +
	"risk_model\x18\x02 \x01(\tR\triskModel\x12)\n" +
	"\x10confidence_level\x18\x03 \x01(\x01R\x0fconfidenceLevel\x12!\n" +
	"\fhorizon_days\x18\x04 \x01(\x01R\vhorizonDays\"\xb0\x02\n" +
	"\vVaRResponse\x129\n" +
	"\rvalue_at_risk\x18\x01 \x01(\v2\x15.trading.DecimalValueR\vvalueAtRisk\x12\x1f\n" +
	"\vasset_names\x18\x02 \x03(\tR\n" +
	"assetNames\x12-\n" +
	"\x12correlation_matrix\x18\x03 \x03(\x01R\x11correlationMatrix\x120\n" +
	"\x14volatility_per_asset\x18\x04 \x03(\x01R\x12volatilityPerAsset\x12'\n" +
	"\x0fsimulation_mode\x18\x05 \x01(\tR\x0esimulationMode\x12;\n" +
	"\vlast_update\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"lastUpdate\"+\n" +
	"\x0fMomentumRequest\x12\x18\n" +
	"\asymbols\x18\x01 \x03(\tR\asymbols\"\xd6\x01\n" +
	"\x0eMomentumMetric\x12\x16\n" +
	"\x06symbol\x18\x01 \x01(\tR\x06symbol\x12\x1d\n" +
	"\n" +
	"last_price\x18\x02 \x01(\x01R\tlastPrice\x12\"\n" +
	"\rpct_change_1m\x18\x03 \x01(\x01R\vpctChange1m\x12\"\n" +
	"\rpct_change_5m\x18\x04 \x01(\x01R\vpctChange5m\x12\x1e\n" +
	"\n" +
	"volatility\x18\x05 \x01(\x01R\n" +
	"volatility\x12%\n" +
	"\x0emomentum_score\x18\x06 \x01(\x01R\rmomentumScore\"v\n" +
	"\x10MomentumResponse\x121\n" +
	"\ametrics\x18\x01 \x03(\v2\x17.trading.MomentumMetricR\ametrics\x12/\n" +
	"\x14generated_at_unix_ms\x18\x02 \x01(\x03R\x11generatedAtUnixMs\"W\n" +
	"\x04Tick\x12\x16\n" +
	"\x06symbol\x18\x01 \x01(\tR\x06symbol\x12\x14\n" +
	"\x05price\x18\x02 \x01(\x01R\x05price\x12!\n" +
	"\ftimestamp_ns\x18\x03 \x01(\x03R\vtimestampNs\"+\n" +
	"\x11TickStreamRequest\x12\x16\n" +
	"\x06symbol\x18\x01 \x01(\tR\x06symbol\"'\n" +
	"\rSymbolRequest\x12\x16\n" +
	"\x06symbol\x18\x01 \x01(\tR\x06symbol\"&\n" +
	"\n" +
	"SymbolList\x12\x18\n" +
	"\asymbols\x18\x01 \x03(\tR\asymbols\"\xec\x01\n" +
	"\x0fStrategyRequest\x12\x1f\n" +
	"\vstrategy_id\x18\x01 \x01(\tR\n" +
	"strategyId\x12\x16\n" +
	"\x06symbol\x18\x02 \x01(\tR\x06symbol\x12H\n" +
	"\n" +
	"parameters\x18\x03 \x03(\v2(.trading.StrategyRequest.ParametersEntryR\n" +
	"parameters\x12\x17\n" +
	"\auser_id\x18\x04 \x01(\tR\x06userId\x1a=\n" +
	"\x0fParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01*:\n" +
	"\tOrderSide\x12\x1a\n" +
	"\x16ORDER_SIDE_UNSPECIFIED\x10\x00\x12\a\n" +
	"\x03BUY\x10\x01\x12\b\n" +
	"\x04SELL\x10\x02*H\n" +
	"\tOrderType\x12\x1a\n" +
	"\x16ORDER_TYPE_UNSPECIFIED\x10\x00\x12\n" +
	"\n" +
	"\x06MARKET\x10\x01\x12\t\n" +
	"\x05LIMIT\x10\x02\x12\b\n" +
	"\x04STOP\x10\x03*\x81\x01\n" +
	"\vOrderStatus\x12\x1c\n" +
	"\x18ORDER_STATUS_UNSPECIFIED\x10\x00\x12\a\n" +
	"\x03NEW\x10\x01\x12\r\n" +
	"\tSUBMITTED\x10\x02\x12\x14\n" +
	"\x10PARTIALLY_FILLED\x10\x03\x12\n" +
	"\n" +
	"\x06FILLED\x10\x04\x12\f\n" +
	"\bCANCELED\x10\x05\x12\f\n" +
	"\bREJECTED\x10\x062\x8d\x02\n" +
	"\x10PortfolioService\x12G\n" +
	"\fGetPortfolio\x12\x19.trading.PortfolioRequest\x1a\x1a.trading.PortfolioResponse\"\x00\x12L\n" +
	"\x0fStreamPortfolio\x12\x19.trading.PortfolioRequest\x1a\x1a.trading.PortfolioResponse\"\x000\x01\x12b\n" +
	"\x15GetPerformanceHistory\x12\".trading.PerformanceHistoryRequest\x1a#.trading.PerformanceHistoryResponse\"\x002\x94\x02\n" +
	"\fOrderService\x12<\n" +
	"\vCreateOrder\x12\x1b.trading.CreateOrderRequest\x1a\x0e.trading.Order\"\x00\x12<\n" +
	"\vCancelOrder\x12\x1b.trading.CancelOrderRequest\x1a\x0e.trading.Order\"\x00\x126\n" +
	"\bGetOrder\x12\x18.trading.GetOrderRequest\x1a\x0e.trading.Order\"\x00\x12P\n" +
	"\x0fGetTradeHistory\x12\x1c.trading.TradeHistoryRequest\x1a\x1d.trading.TradeHistoryResponse\"\x002\x82\x02\n" +
	"\vAuthService\x12=\n" +
	"\bRegister\x12\x18.trading.RegisterRequest\x1a\x15.trading.AuthResponse\"\x00\x126\n" +
	"\x05Login\x12\x14.trading.AuthRequest\x1a\x15.trading.AuthResponse\"\x00\x125\n" +
	"\aGetUser\x12\x17.trading.GetUserRequest\x1a\x11.trading.UserInfo\x12E\n" +
	"\fRefreshToken\x12\x1c.trading.RefreshTokenRequest\x1a\x15.trading.AuthResponse\"\x002\x95\x04\n" +
	"\n" +
	"BotService\x12A\n" +
	"\tCreateBot\x12\x19.trading.CreateBotRequest\x1a\x17.trading.StatusResponse\"\x00\x12/\n" +
	"\x06GetBot\x12\x15.trading.BotIdRequest\x1a\f.trading.Bot\"\x00\x126\n" +
	"\tUpdateBot\x12\x19.trading.UpdateBotRequest\x1a\f.trading.Bot\"\x00\x12=\n" +
	"\tDeleteBot\x12\x15.trading.BotIdRequest\x1a\x17.trading.StatusResponse\"\x00\x12.\n" +
	"\bListBots\x12\x0e.trading.Empty\x1a\x10.trading.BotList\"\x00\x12<\n" +
	"\bStartBot\x12\x15.trading.BotIdRequest\x1a\x17.trading.StatusResponse\"\x00\x12;\n" +
	"\aStopBot\x12\x15.trading.BotIdRequest\x1a\x17.trading.StatusResponse\"\x00\x125\n" +
	"\fGetBotStatus\x12\x15.trading.BotIdRequest\x1a\f.trading.Bot\"\x00\x12:\n" +
	"\x0fStreamBotStatus\x12\x15.trading.BotIdRequest\x1a\f.trading.Bot\"\x000\x012J\n" +
	"\vRiskService\x12;\n" +
	"\fCalculateVaR\x12\x13.trading.VaRRequest\x1a\x14.trading.VaRResponse\"\x002\x89\x05\n" +
	"\x0eTradingService\x12D\n" +
	"\x0fStreamOrderBook\x12\x19.trading.OrderBookRequest\x1a\x12.trading.OrderBook\"\x000\x01\x12*\n" +
	"\bGetPrice\x12\r.trading.Tick\x1a\r.trading.Tick\"\x00\x12D\n" +
	"\rStartStrategy\x12\x18.trading.StrategyRequest\x1a\x17.trading.StatusResponse\"\x00\x12C\n" +
	"\fStopStrategy\x12\x18.trading.StrategyRequest\x1a\x17.trading.StatusResponse\"\x00\x12=\n" +
	"\x0eSubscribeTicks\x12\x18.trading.StrategyRequest\x1a\r.trading.Tick\"\x000\x01\x12<\n" +
	"\vStreamPrice\x12\x1a.trading.TickStreamRequest\x1a\r.trading.Tick\"\x000\x01\x12>\n" +
	"\tAddSymbol\x12\x16.trading.SymbolRequest\x1a\x17.trading.StatusResponse\"\x00\x12A\n" +
	"\fRemoveSymbol\x12\x16.trading.SymbolRequest\x1a\x17.trading.StatusResponse\"\x00\x124\n" +
	"\vListSymbols\x12\x0e.trading.Empty\x1a\x13.trading.SymbolList\"\x00\x12D\n" +
	"\vGetMomentum\x12\x18.trading.MomentumRequest\x1a\x19.trading.MomentumResponse\"\x00B\x0fZ\raetherion/genb\x06proto3"

var (
	file_trading_api_proto_rawDescOnce sync.Once
	file_trading_api_proto_rawDescData []byte
)

func file_trading_api_proto_rawDescGZIP() []byte {
	file_trading_api_proto_rawDescOnce.Do(func() {
		file_trading_api_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_trading_api_proto_rawDesc), len(file_trading_api_proto_rawDesc)))
	})
	return file_trading_api_proto_rawDescData
}

var file_trading_api_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_trading_api_proto_msgTypes = make([]protoimpl.MessageInfo, 47)
var file_trading_api_proto_goTypes = []any{
	(OrderSide)(0),                     // 0: trading.OrderSide
	(OrderType)(0),                     // 1: trading.OrderType
	(OrderStatus)(0),                   // 2: trading.OrderStatus
	(*Empty)(nil),                      // 3: trading.Empty
	(*DecimalValue)(nil),               // 4: trading.DecimalValue
	(*StatusResponse)(nil),             // 5: trading.StatusResponse
	(*Pagination)(nil),                 // 6: trading.Pagination
	(*PortfolioRequest)(nil),           // 7: trading.PortfolioRequest
	(*PortfolioPosition)(nil),          // 8: trading.PortfolioPosition
	(*PortfolioResponse)(nil),          // 9: trading.PortfolioResponse
	(*PerformanceHistoryRequest)(nil),  // 10: trading.PerformanceHistoryRequest
	(*BotPerformanceSnapshot)(nil),     // 11: trading.BotPerformanceSnapshot
	(*PerformanceHistoryResponse)(nil), // 12: trading.PerformanceHistoryResponse
	(*Order)(nil),                      // 13: trading.Order
	(*CreateOrderRequest)(nil),         // 14: trading.CreateOrderRequest
	(*CancelOrderRequest)(nil),         // 15: trading.CancelOrderRequest
	(*GetOrderRequest)(nil),            // 16: trading.GetOrderRequest
	(*OrderBook)(nil),                  // 17: trading.OrderBook
	(*OrderBookEntry)(nil),             // 18: trading.OrderBookEntry
	(*OrderBookRequest)(nil),           // 19: trading.OrderBookRequest
	(*Trade)(nil),                      // 20: trading.Trade
	(*TradeRequest)(nil),               // 21: trading.TradeRequest
	(*TradeResponse)(nil),              // 22: trading.TradeResponse
	(*TradeHistoryRequest)(nil),        // 23: trading.TradeHistoryRequest
	(*TradeHistoryResponse)(nil),       // 24: trading.TradeHistoryResponse
	(*AuthRequest)(nil),                // 25: trading.AuthRequest
	(*AuthResponse)(nil),               // 26: trading.AuthResponse
	(*GetUserRequest)(nil),             // 27: trading.GetUserRequest
	(*RegisterRequest)(nil),            // 28: trading.RegisterRequest
	(*UserInfo)(nil),                   // 29: trading.UserInfo
	(*RefreshTokenRequest)(nil),        // 30: trading.RefreshTokenRequest
	(*Bot)(nil),                        // 31: trading.Bot
	(*UpdateBotRequest)(nil),           // 32: trading.UpdateBotRequest
	(*CreateBotRequest)(nil),           // 33: trading.CreateBotRequest
	(*BotIdRequest)(nil),               // 34: trading.BotIdRequest
	(*ListBotsRequest)(nil),            // 35: trading.ListBotsRequest
	(*BotList)(nil),                    // 36: trading.BotList
	(*VaRRequest)(nil),                 // 37: trading.VaRRequest
	(*VaRResponse)(nil),                // 38: trading.VaRResponse
	(*MomentumRequest)(nil),            // 39: trading.MomentumRequest
	(*MomentumMetric)(nil),             // 40: trading.MomentumMetric
	(*MomentumResponse)(nil),           // 41: trading.MomentumResponse
	(*Tick)(nil),                       // 42: trading.Tick
	(*TickStreamRequest)(nil),          // 43: trading.TickStreamRequest
	(*SymbolRequest)(nil),              // 44: trading.SymbolRequest
	(*SymbolList)(nil),                 // 45: trading.SymbolList
	(*StrategyRequest)(nil),            // 46: trading.StrategyRequest
	nil,                                // 47: trading.Bot.ParametersEntry
	nil,                                // 48: trading.CreateBotRequest.ParametersEntry
	nil,                                // 49: trading.StrategyRequest.ParametersEntry
	(*timestamppb.Timestamp)(nil),      // 50: google.protobuf.Timestamp
}
var file_trading_api_proto_depIdxs = []int32{
	4,  // 0: trading.PortfolioPosition.quantity:type_name -> trading.DecimalValue
	4,  // 1: trading.PortfolioPosition.average_price:type_name -> trading.DecimalValue
	4,  // 2: trading.PortfolioPosition.market_value:type_name -> trading.DecimalValue
	4,  // 3: trading.PortfolioPosition.unrealized_pnl:type_name -> trading.DecimalValue
	4,  // 4: trading.PortfolioPosition.exposure_pct:type_name -> trading.DecimalValue
	8,  // 5: trading.PortfolioResponse.positions:type_name -> trading.PortfolioPosition
	4,  // 6: trading.PortfolioResponse.total_portfolio_value:type_name -> trading.DecimalValue
	4,  // 7: trading.PortfolioResponse.cash_balance:type_name -> trading.DecimalValue
	50, // 8: trading.PortfolioResponse.updated_at:type_name -> google.protobuf.Timestamp
	50, // 9: trading.PerformanceHistoryRequest.start_time:type_name -> google.protobuf.Timestamp
	50, // 10: trading.PerformanceHistoryRequest.end_time:type_name -> google.protobuf.Timestamp
	50, // 11: trading.BotPerformanceSnapshot.snapshot_time:type_name -> google.protobuf.Timestamp
	4,  // 12: trading.BotPerformanceSnapshot.equity_value:type_name -> trading.DecimalValue
	4,  // 13: trading.BotPerformanceSnapshot.cash_balance:type_name -> trading.DecimalValue
	4,  // 14: trading.BotPerformanceSnapshot.pnl:type_name -> trading.DecimalValue
	11, // 15: trading.PerformanceHistoryResponse.snapshots:type_name -> trading.BotPerformanceSnapshot
	0,  // 16: trading.Order.side:type_name -> trading.OrderSide
	1,  // 17: trading.Order.type:type_name -> trading.OrderType
	2,  // 18: trading.Order.status:type_name -> trading.OrderStatus
	4,  // 19: trading.Order.quantity_requested:type_name -> trading.DecimalValue
	4,  // 20: trading.Order.quantity_filled:type_name -> trading.DecimalValue
	4,  // 21: trading.Order.limit_price:type_name -> trading.DecimalValue
	4,  // 22: trading.Order.stop_price:type_name -> trading.DecimalValue
	50, // 23: trading.Order.created_at:type_name -> google.protobuf.Timestamp
	50, // 24: trading.Order.updated_at:type_name -> google.protobuf.Timestamp
	20, // 25: trading.Order.trades:type_name -> trading.Trade
	0,  // 26: trading.CreateOrderRequest.side:type_name -> trading.OrderSide
	1,  // 27: trading.CreateOrderRequest.type:type_name -> trading.OrderType
	4,  // 28: trading.CreateOrderRequest.quantity:type_name -> trading.DecimalValue
	4,  // 29: trading.CreateOrderRequest.limit_price:type_name -> trading.DecimalValue
	4,  // 30: trading.CreateOrderRequest.stop_price:type_name -> trading.DecimalValue
	18, // 31: trading.OrderBook.bids:type_name -> trading.OrderBookEntry
	18, // 32: trading.OrderBook.asks:type_name -> trading.OrderBookEntry
	4,  // 33: trading.Trade.commission:type_name -> trading.DecimalValue
	50, // 34: trading.Trade.executed_at_timestamp:type_name -> google.protobuf.Timestamp
	4,  // 35: trading.Trade.pnl_realized:type_name -> trading.DecimalValue
	4,  // 36: trading.Trade.pnl_unrealized:type_name -> trading.DecimalValue
	20, // 37: trading.TradeHistoryResponse.trades:type_name -> trading.Trade
	47, // 38: trading.Bot.parameters:type_name -> trading.Bot.ParametersEntry
	4,  // 39: trading.Bot.initial_account_value:type_name -> trading.DecimalValue
	4,  // 40: trading.Bot.current_account_value:type_name -> trading.DecimalValue
	50, // 41: trading.Bot.created_at:type_name -> google.protobuf.Timestamp
	50, // 42: trading.Bot.updated_at:type_name -> google.protobuf.Timestamp
	48, // 43: trading.CreateBotRequest.parameters:type_name -> trading.CreateBotRequest.ParametersEntry
	31, // 44: trading.BotList.bots:type_name -> trading.Bot
	9,  // 45: trading.VaRRequest.current_portfolio:type_name -> trading.PortfolioResponse
	4,  // 46: trading.VaRResponse.value_at_risk:type_name -> trading.DecimalValue
	50, // 47: trading.VaRResponse.last_update:type_name -> google.protobuf.Timestamp
	40, // 48: trading.MomentumResponse.metrics:type_name -> trading.MomentumMetric
	49, // 49: trading.StrategyRequest.parameters:type_name -> trading.StrategyRequest.ParametersEntry
	7,  // 50: trading.PortfolioService.GetPortfolio:input_type -> trading.PortfolioRequest
	7,  // 51: trading.PortfolioService.StreamPortfolio:input_type -> trading.PortfolioRequest
	10, // 52: trading.PortfolioService.GetPerformanceHistory:input_type -> trading.PerformanceHistoryRequest
	14, // 53: trading.OrderService.CreateOrder:input_type -> trading.CreateOrderRequest
	15, // 54: trading.OrderService.CancelOrder:input_type -> trading.CancelOrderRequest
	16, // 55: trading.OrderService.GetOrder:input_type -> trading.GetOrderRequest
	23, // 56: trading.OrderService.GetTradeHistory:input_type -> trading.TradeHistoryRequest
	28, // 57: trading.AuthService.Register:input_type -> trading.RegisterRequest
	25, // 58: trading.AuthService.Login:input_type -> trading.AuthRequest
	27, // 59: trading.AuthService.GetUser:input_type -> trading.GetUserRequest
	30, // 60: trading.AuthService.RefreshToken:input_type -> trading.RefreshTokenRequest
	33, // 61: trading.BotService.CreateBot:input_type -> trading.CreateBotRequest
	34, // 62: trading.BotService.GetBot:input_type -> trading.BotIdRequest
	32, // 63: trading.BotService.UpdateBot:input_type -> trading.UpdateBotRequest
	34, // 64: trading.BotService.DeleteBot:input_type -> trading.BotIdRequest
	3,  // 65: trading.BotService.ListBots:input_type -> trading.Empty
	34, // 66: trading.BotService.StartBot:input_type -> trading.BotIdRequest
	34, // 67: trading.BotService.StopBot:input_type -> trading.BotIdRequest
	34, // 68: trading.BotService.GetBotStatus:input_type -> trading.BotIdRequest
	34, // 69: trading.BotService.StreamBotStatus:input_type -> trading.BotIdRequest
	37, // 70: trading.RiskService.CalculateVaR:input_type -> trading.VaRRequest
	19, // 71: trading.TradingService.StreamOrderBook:input_type -> trading.OrderBookRequest
	42, // 72: trading.TradingService.GetPrice:input_type -> trading.Tick
	46, // 73: trading.TradingService.StartStrategy:input_type -> trading.StrategyRequest
	46, // 74: trading.TradingService.StopStrategy:input_type -> trading.StrategyRequest
	46, // 75: trading.TradingService.SubscribeTicks:input_type -> trading.StrategyRequest
	43, // 76: trading.TradingService.StreamPrice:input_type -> trading.TickStreamRequest
	44, // 77: trading.TradingService.AddSymbol:input_type -> trading.SymbolRequest
	44, // 78: trading.TradingService.RemoveSymbol:input_type -> trading.SymbolRequest
	3,  // 79: trading.TradingService.ListSymbols:input_type -> trading.Empty
	39, // 80: trading.TradingService.GetMomentum:input_type -> trading.MomentumRequest
	9,  // 81: trading.PortfolioService.GetPortfolio:output_type -> trading.PortfolioResponse
	9,  // 82: trading.PortfolioService.StreamPortfolio:output_type -> trading.PortfolioResponse
	12, // 83: trading.PortfolioService.GetPerformanceHistory:output_type -> trading.PerformanceHistoryResponse
	13, // 84: trading.OrderService.CreateOrder:output_type -> trading.Order
	13, // 85: trading.OrderService.CancelOrder:output_type -> trading.Order
	13, // 86: trading.OrderService.GetOrder:output_type -> trading.Order
	24, // 87: trading.OrderService.GetTradeHistory:output_type -> trading.TradeHistoryResponse
	26, // 88: trading.AuthService.Register:output_type -> trading.AuthResponse
	26, // 89: trading.AuthService.Login:output_type -> trading.AuthResponse
	29, // 90: trading.AuthService.GetUser:output_type -> trading.UserInfo
	26, // 91: trading.AuthService.RefreshToken:output_type -> trading.AuthResponse
	5,  // 92: trading.BotService.CreateBot:output_type -> trading.StatusResponse
	31, // 93: trading.BotService.GetBot:output_type -> trading.Bot
	31, // 94: trading.BotService.UpdateBot:output_type -> trading.Bot
	5,  // 95: trading.BotService.DeleteBot:output_type -> trading.StatusResponse
	36, // 96: trading.BotService.ListBots:output_type -> trading.BotList
	5,  // 97: trading.BotService.StartBot:output_type -> trading.StatusResponse
	5,  // 98: trading.BotService.StopBot:output_type -> trading.StatusResponse
	31, // 99: trading.BotService.GetBotStatus:output_type -> trading.Bot
	31, // 100: trading.BotService.StreamBotStatus:output_type -> trading.Bot
	38, // 101: trading.RiskService.CalculateVaR:output_type -> trading.VaRResponse
	17, // 102: trading.TradingService.StreamOrderBook:output_type -> trading.OrderBook
	42, // 103: trading.TradingService.GetPrice:output_type -> trading.Tick
	5,  // 104: trading.TradingService.StartStrategy:output_type -> trading.StatusResponse
	5,  // 105: trading.TradingService.StopStrategy:output_type -> trading.StatusResponse
	42, // 106: trading.TradingService.SubscribeTicks:output_type -> trading.Tick
	42, // 107: trading.TradingService.StreamPrice:output_type -> trading.Tick
	5,  // 108: trading.TradingService.AddSymbol:output_type -> trading.StatusResponse
	5,  // 109: trading.TradingService.RemoveSymbol:output_type -> trading.StatusResponse
	45, // 110: trading.TradingService.ListSymbols:output_type -> trading.SymbolList
	41, // 111: trading.TradingService.GetMomentum:output_type -> trading.MomentumResponse
	81, // [81:112] is the sub-list for method output_type
	50, // [50:81] is the sub-list for method input_type
	50, // [50:50] is the sub-list for extension type_name
	50, // [50:50] is the sub-list for extension extendee
	0,  // [0:50] is the sub-list for field type_name
}

func init() { file_trading_api_proto_init() }
func file_trading_api_proto_init() {
	if File_trading_api_proto != nil {
		return
	}
	file_trading_api_proto_msgTypes[10].OneofWrappers = []any{}
	file_trading_api_proto_msgTypes[11].OneofWrappers = []any{}
	file_trading_api_proto_msgTypes[17].OneofWrappers = []any{}
	file_trading_api_proto_msgTypes[29].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_trading_api_proto_rawDesc), len(file_trading_api_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   47,
			NumExtensions: 0,
			NumServices:   6,
		},
		GoTypes:           file_trading_api_proto_goTypes,
		DependencyIndexes: file_trading_api_proto_depIdxs,
		EnumInfos:         file_trading_api_proto_enumTypes,
		MessageInfos:      file_trading_api_proto_msgTypes,
	}.Build()
	File_trading_api_proto = out.File
	file_trading_api_proto_goTypes = nil
	file_trading_api_proto_depIdxs = nil
}
